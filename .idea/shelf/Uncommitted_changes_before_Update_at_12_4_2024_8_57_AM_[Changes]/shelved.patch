Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/splash/SplashActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.splash\r\n\r\nimport android.animation.ObjectAnimator\r\nimport android.view.LayoutInflater\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivitySplashBinding\r\nimport com.ardrawing.sketch.anime.drawing.ui.language_start.LanguageStartActivity\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.SupervisorJob\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\n\r\nclass SplashActivity : BaseActivity<ActivitySplashBinding>() {\r\n    private val coroutineScope = CoroutineScope(SupervisorJob() + Dispatchers.Default);\r\n\r\n\r\n    override fun setViewBinding(): ActivitySplashBinding {\r\n        return ActivitySplashBinding.inflate(LayoutInflater.from(this))\r\n    }\r\n\r\n    override fun initView() {\r\n        val rotationAnimation =\r\n            ObjectAnimator.ofFloat(binding.circularProgressbar, \"rotation\", 0f, 360f)\r\n        rotationAnimation.duration = 800\r\n        rotationAnimation.repeatCount = ObjectAnimator.INFINITE\r\n        rotationAnimation.repeatMode = ObjectAnimator.RESTART\r\n\r\n        rotationAnimation.start()\r\n        coroutineScope.launch {\r\n            delay(4000)\r\n            showActivity(LanguageStartActivity::class.java)\r\n        }\r\n    }\r\n\r\n    override fun viewListener() {\r\n    }\r\n\r\n    override fun dataObservable() {\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/splash/SplashActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/splash/SplashActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/splash/SplashActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/splash/SplashActivity.kt	(date 1733209137766)
@@ -2,9 +2,26 @@
 
 import android.animation.ObjectAnimator
 import android.view.LayoutInflater
+import com.amazic.ads.callback.AdCallback
+import com.amazic.ads.callback.InterCallback
+import com.amazic.ads.util.Admob
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.AppOpenManager
+import com.applovin.sdk.AppLovinPrivacySettings
+import com.ardrawing.sketch.anime.drawing.R
+import com.ardrawing.sketch.anime.drawing.ads.AdsSplash
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivitySplashBinding
+import com.ardrawing.sketch.anime.drawing.sharePreferent.Common
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.ui.language_start.LanguageStartActivity
+import com.google.android.gms.ads.AdError
+import com.google.android.gms.ads.LoadAdError
+import com.ironsource.mediationsdk.IronSource
+import com.mbridge.msdk.MBridgeConstans
+import com.mbridge.msdk.out.MBridgeSDKFactory
+import com.unity3d.ads.metadata.MetaData
+import com.vungle.ads.VunglePrivacySettings
 import kotlinx.coroutines.CoroutineScope
 import kotlinx.coroutines.Dispatchers
 import kotlinx.coroutines.SupervisorJob
@@ -13,8 +30,9 @@
 
 class SplashActivity : BaseActivity<ActivitySplashBinding>() {
     private val coroutineScope = CoroutineScope(SupervisorJob() + Dispatchers.Default);
-
-
+    private var adsSplash: AdsSplash? = null
+    private var adCallback: AdCallback? = null
+    private var interCallback: InterCallback? = null
     override fun setViewBinding(): ActivitySplashBinding {
         return ActivitySplashBinding.inflate(LayoutInflater.from(this))
     }
@@ -27,19 +45,210 @@
         rotationAnimation.repeatMode = ObjectAnimator.RESTART
 
         rotationAnimation.start()
-        coroutineScope.launch {
-            delay(4000)
-            showActivity(LanguageStartActivity::class.java)
-        }
-    }
-
-    override fun viewListener() {
-    }
-
-    override fun dataObservable() {
+        Admob.getInstance().setOpenShowAllAds(false)
+        Common.initRemoteConfig { task ->
+            if (task.isSuccessful) {
+                val updated = task.result as Boolean
+                if (updated) {
+                    setupConfigRemote()
+                }
+                checkUMP()
+            } else {
+                checkUMP()
+            }
+        }
+    }
+
+    private fun checkUMP() {
+        val adsConsentManager = AdsConsentManager(this)
+        adsConsentManager.requestUMP { b ->
+            if (b) {
+                AppOpenManager.getInstance().initApi(application);
+                AppOpenManager.getInstance()
+                    .disableAppResumeWithActivity(SplashActivity::class.java)
+            }
+            handleOpenApp()
+            initMediation(b)
+        }
+
+    }
+
+    private fun handleOpenApp() {
+        Admob.getInstance()
+            .setOpenShowAllAds(SharePrefRemote.get_config(this, SharePrefRemote.ads_visibility))
+        Admob.getInstance().setTimeInterval(
+            SharePrefRemote.get_config_long(
+                this,
+                SharePrefRemote.interval_between_interstitial
+            ) * 1000
+        )
+        if (!SharePrefRemote.get_config(this, SharePrefRemote.appopen_resume)) {
+            AppOpenManager.getInstance().disableAppResume()
+            AppOpenManager.getInstance().setAppResumeAdId("")
+        }
+
+        api()
+    }
+
+    private fun setupConfigRemote() {
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.ads_visibility,
+            Common.getRemoteConfigBoolean("ads_visibility")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.inter_splash,
+            Common.getRemoteConfigBoolean("inter_splash")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.native_language,
+            Common.getRemoteConfigBoolean("native_language")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.native_intro,
+            Common.getRemoteConfigBoolean("native_intro")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.inter_intro,
+            Common.getRemoteConfigBoolean("inter_intro")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.banner_home,
+            Common.getRemoteConfigBoolean("banner_home")
+        )
+        SharePrefRemote.set_config_long(
+            this,
+            SharePrefRemote.interval_between_interstitial,
+            Common.getRemoteConfigLong("interval_between_interstitial")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.appopen_resume,
+            Common.getRemoteConfigBoolean("appopen_resume")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.native_permission,
+            Common.getRemoteConfigBoolean("native_permission")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.native_tutorial,
+            Common.getRemoteConfigBoolean("native_tutorial")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.native_category,
+            Common.getRemoteConfigBoolean("native_category")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.inter_category,
+            Common.getRemoteConfigBoolean("inter_category")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.banner_draw,
+            Common.getRemoteConfigBoolean("banner_draw")
+        )
+        SharePrefRemote.set_config(
+            this,
+            SharePrefRemote.inter_draw,
+            Common.getRemoteConfigBoolean("inter_draw")
+        )
+
+    }
+
+    override fun viewListener() {
+    }
+
+    private fun api() {
+        adCallback = object : AdCallback() {
+            override fun onNextAction() {
+                super.onNextAction()
+                startIntro()
+            }
+
+            override fun onAdFailedToLoad(i: LoadAdError?) {
+                super.onAdFailedToLoad(i)
+                startIntro()
+            }
+
+            override fun onAdFailedToShow(adError: AdError?) {
+                super.onAdFailedToShow(adError)
+                startIntro()
+            }
+        }
+
+        interCallback = object : InterCallback() {
+            override fun onNextAction() {
+                super.onNextAction()
+                showActivity(LanguageStartActivity::class.java)
+            }
+        }
+        if (AdsConsentManager.getConsentResult(this@SplashActivity)) {
+            if (SharePrefRemote.get_config(
+                    this@SplashActivity,
+                    SharePrefRemote.appopen_resume
+                )
+            ) {
+                AppOpenManager.getInstance()
+                    .init(application, getString(R.string.appopen_resume))
+            }
+            adsSplash = AdsSplash.init(
+                SharePrefRemote.get_config(
+                    this@SplashActivity,
+                    SharePrefRemote.inter_splash
+                ), false,
+                SharePrefRemote.get_config_string(
+                    this@SplashActivity,
+                    "100_0"
+                )
+            )
+            adsSplash?.showAdsSplashApi(
+                this@SplashActivity,
+                adCallback,
+                interCallback
+            )
+        } else {
+            coroutineScope.launch {
+                delay(3000)
+                startIntro()
+            }
+        }
+    }
+
+    override fun dataObservable() {
+    }
+
+    private fun startIntro() {
+        showActivity(LanguageStartActivity::class.java)
+        finish()
     }
 
     override fun onResume() {
         super.onResume()
+        AppOpenManager.getInstance().disableAppResumeWithActivity(SplashActivity::class.java)
+        if (adsSplash != null && AdsConsentManager.getConsentResult(this@SplashActivity)) {
+            adsSplash?.onCheckShowSplashWhenFail(this, adCallback, interCallback)
+        }
+    }
+
+    private fun initMediation(canRequestAds: Boolean) {
+        VunglePrivacySettings.setGDPRStatus(canRequestAds, null)
+        AppLovinPrivacySettings.setHasUserConsent(canRequestAds, this)
+        IronSource.setConsent(canRequestAds)
+        MBridgeSDKFactory.getMBridgeSDK().setConsentStatus(
+            this,
+            if (canRequestAds) MBridgeConstans.IS_SWITCH_ON else MBridgeConstans.IS_SWITCH_OFF
+        )
+        val gdprMetaData = MetaData(this)
+        gdprMetaData["gdpr.consent"] = canRequestAds
+        gdprMetaData.commit()
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_splash.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/color_app\">\r\n\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"152dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.cardview.widget.CardView\r\n            android:layout_width=\"150dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:cardCornerRadius=\"18dp\">\r\n            <ImageView\r\n                android:id=\"@+id/iv_logo\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:adjustViewBounds=\"true\"\r\n                android:src=\"@drawable/img_splash\" />\r\n        </androidx.cardview.widget.CardView>\r\n\r\n\r\n        <androidx.appcompat.widget.AppCompatTextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"50dp\"\r\n            android:gravity=\"center|center_vertical\"\r\n            android:fontFamily=\"@font/lato_bold\"\r\n            android:text=\"@string/ar_drawing_sketch_paint\"\r\n            android:textColor=\"@color/color_FF6F89\"\r\n            android:textSize=\"30sp\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_marginTop=\"228dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\">\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/circularProgressbar\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:indeterminate=\"true\"\r\n            android:indeterminateDrawable=\"@drawable/bg_progress_bar\"\r\n            android:max=\"100\"\r\n            android:progress=\"75\"\r\n            android:secondaryProgress=\"100\"\r\n            android:thicknessRatio=\"2.0\" />\r\n    </LinearLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_splash\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/onest_medium\"\r\n        android:gravity=\"center\"\r\n        android:text=\"@string/this_action_may_contain_advertising\"\r\n        android:textColor=\"@color/color_313131\"\r\n        android:textSize=\"14sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout\"\r\n        app:layout_constraintVertical_bias=\"0.446\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_splash.xml b/app/src/main/res/layout/activity_splash.xml
--- a/app/src/main/res/layout/activity_splash.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_splash.xml	(date 1733277414524)
@@ -48,7 +48,7 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_centerVertical="true"
-        android:layout_marginTop="228dp"
+        android:layout_marginTop="192dp"
         android:gravity="center"
         android:orientation="vertical"
         app:layout_constraintEnd_toEndOf="parent"
@@ -58,10 +58,10 @@
 
         <ProgressBar
             android:id="@+id/circularProgressbar"
-            android:layout_width="50dp"
-            android:layout_height="50dp"
+            android:layout_width="30dp"
+            android:layout_height="30dp"
             android:indeterminate="true"
-            android:indeterminateDrawable="@drawable/bg_progress_bar"
+            android:theme="@style/CustomProgressbar"
             android:max="100"
             android:progress="75"
             android:secondaryProgress="100"
@@ -72,15 +72,15 @@
         android:id="@+id/tv_splash"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
         android:fontFamily="@font/onest_medium"
         android:gravity="center"
         android:text="@string/this_action_may_contain_advertising"
         android:textColor="@color/color_313131"
         android:textSize="14sp"
-        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/linearLayout"
-        app:layout_constraintVertical_bias="0.446" />
+        app:layout_constraintTop_toBottomOf="@+id/linearLayout" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_150_timing.txt
===================================================================
diff --git a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_150_timing.txt b/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_150_timing.txt
deleted file mode 100644
--- a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_150_timing.txt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ /dev/null	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
@@ -1,3 +0,0 @@
-# C/C++ build system timings
-generate_cxx_metadata 57ms
-
Index: sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_333_timing.txt
===================================================================
diff --git a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_333_timing.txt b/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_333_timing.txt
deleted file mode 100644
--- a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_333_timing.txt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ /dev/null	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
@@ -1,6 +0,0 @@
-# C/C++ build system timings
-generate_cxx_metadata
-  create-invalidation-state 39ms
-  [gap of 65ms]
-generate_cxx_metadata completed in 106ms
-
Index: sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_247_timing.txt
===================================================================
diff --git a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_247_timing.txt b/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_247_timing.txt
deleted file mode 100644
--- a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/arm64-v8a/generate_cxx_metadata_247_timing.txt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ /dev/null	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
@@ -1,8 +0,0 @@
-# C/C++ build system timings
-generate_cxx_metadata
-  [gap of 10ms]
-  create-invalidation-state 10ms
-  [gap of 162ms]
-  write-metadata-json-to-file 13ms
-generate_cxx_metadata completed in 195ms
-
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.base\r\n\r\nimport android.Manifest\r\nimport android.annotation.SuppressLint\r\nimport android.content.ComponentName\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.ServiceConnection\r\nimport android.content.pm.ActivityInfo\r\nimport android.content.pm.PackageManager\r\nimport android.hardware.camera2.CameraManager\r\nimport android.net.Uri\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.os.IBinder\r\nimport android.os.Looper\r\nimport android.provider.Settings\r\nimport android.view.View\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport android.widget.Toast\r\nimport androidx.activity.result.contract.ActivityResultContracts\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\nimport androidx.core.view.WindowInsetsControllerCompat\r\nimport androidx.viewbinding.ViewBinding\r\nimport com.ardrawing.sketch.anime.drawing.dialog.PermissionDialog\r\nimport com.ardrawing.sketch.anime.drawing.utils.SystemUtil\r\n\r\n\r\nabstract class BaseActivity<T : ViewBinding> : AppCompatActivity() {\r\n\r\n\r\n    private lateinit var cameraManager: CameraManager\r\n    private lateinit var cameraId: String\r\n    private var _binding: T? = null\r\n    lateinit var binding: T\r\n    private var TAG = \"\"\r\n    private var currentApiVersion = 0\r\n    private var isServiceBound = false\r\n\r\n    private val connection = object : ServiceConnection {\r\n        override fun onServiceConnected(name: ComponentName?, binder: IBinder?) {\r\n            isServiceBound = true\r\n        }\r\n\r\n        override fun onServiceDisconnected(name: ComponentName?) {\r\n            isServiceBound = false\r\n        }\r\n    }\r\n\r\n    private val requestPermissionLauncher =\r\n        registerForActivityResult(\r\n            ActivityResultContracts.RequestMultiplePermissions()\r\n        ) { callback ->\r\n            if (callback.containsValue(false)) {\r\n                onPermissionDenied()\r\n            } else {\r\n                onPermissionGranted()\r\n            }\r\n        }\r\n\r\n    private val requestPermissionActivity =\r\n        registerForActivityResult(\r\n            ActivityResultContracts.StartActivityForResult()\r\n        ) { callback ->\r\n            if (callback.resultCode == RESULT_OK)\r\n                onPermissionGranted()\r\n            else\r\n                onPermissionDenied()\r\n        }\r\n\r\n    protected abstract fun setViewBinding(): T\r\n    protected abstract fun initView()\r\n    protected abstract fun viewListener()\r\n    protected abstract fun dataObservable()\r\n    open fun onPermissionGranted() {}\r\n    open fun onPermissionDenied() {}\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        currentApiVersion = Build.VERSION.SDK_INT\r\n        val flags = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE\r\n                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\r\n                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n                or View.SYSTEM_UI_FLAG_FULLSCREEN\r\n                or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)\r\n        if (currentApiVersion >= Build.VERSION_CODES.KITKAT) {\r\n            window.decorView.systemUiVisibility = flags\r\n            val decorView = window.decorView\r\n            decorView\r\n                .setOnSystemUiVisibilityChangeListener { visibility ->\r\n                    if (visibility and View.SYSTEM_UI_FLAG_FULLSCREEN == 0) {\r\n                        decorView.systemUiVisibility = flags\r\n                    }\r\n                }\r\n        }\r\n        super.onCreate(savedInstanceState)\r\n        try {\r\n            SystemUtil.setLocale(this)\r\n            _binding = setViewBinding()\r\n            requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT\r\n            TAG = \"$localClassName check\"\r\n            _binding?.let {\r\n                binding = it\r\n                setContentView(binding.root)\r\n                initView()\r\n                dataObservable()\r\n                viewListener()\r\n            }\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    override fun onWindowFocusChanged(hasFocus: Boolean) {\r\n        super.onWindowFocusChanged(hasFocus)\r\n\r\n        if (currentApiVersion >= Build.VERSION_CODES.KITKAT && hasFocus) {\r\n            window.decorView.systemUiVisibility = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE\r\n                    or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\r\n                    or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                    or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\r\n                    or View.SYSTEM_UI_FLAG_FULLSCREEN\r\n                    or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)\r\n        }\r\n    }\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        if (isServiceBound) {\r\n            unbindService(connection)\r\n            isServiceBound = false\r\n        }\r\n    }\r\n\r\n    private fun fullScreen() {\r\n        val windowInsetsController: WindowInsetsControllerCompat? =\r\n            if (Build.VERSION.SDK_INT >= 30) {\r\n                ViewCompat.getWindowInsetsController(window.decorView)\r\n            } else {\r\n                WindowInsetsControllerCompat(window, binding.root)\r\n            }\r\n\r\n        if (windowInsetsController == null) {\r\n            return\r\n        }\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,\r\n            WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS\r\n        )\r\n        windowInsetsController.systemBarsBehavior =\r\n            WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE\r\n\r\n        windowInsetsController.hide(WindowInsetsCompat.Type.navigationBars())\r\n        windowInsetsController.hide(WindowInsetsCompat.Type.systemGestures())\r\n    }\r\n\r\n    fun showActivity(activity: Class<*>, bundle: Bundle?) {\r\n        val intent = Intent(this, activity)\r\n        intent.putExtras(bundle ?: Bundle())\r\n        startActivity(intent)\r\n    }\r\n\r\n    fun showActivity(activity: Class<*>) {\r\n        val intent = Intent(this, activity)\r\n        startActivity(intent)\r\n    }\r\n\r\n    protected open fun initCamera() {\r\n        cameraManager = getSystemService(Context.CAMERA_SERVICE) as CameraManager\r\n        cameraId = cameraManager.cameraIdList[0]\r\n    }\r\n\r\n\r\n    open fun showDialogPermission(\r\n        permissions: Array<String>,\r\n    ) {\r\n        for (per in permissions) {\r\n            if (!checkPermission(per)) {\r\n                if (ActivityCompat.shouldShowRequestPermissionRationale(this, per)) {\r\n                    val intent = Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)\r\n                    val uri = Uri.fromParts(\"package\", applicationContext.packageName, null)\r\n                    intent.data = uri\r\n                    val dialogPermission = PermissionDialog(this) {\r\n                        requestPermissionActivity.launch(intent)\r\n                    }\r\n                    dialogPermission.show()\r\n                } else {\r\n                    requestPermissionLauncher.launch(permissions)\r\n                }\r\n                return\r\n            }\r\n        }\r\n        onPermissionGranted()\r\n    }\r\n\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n    }\r\n\r\n    protected open fun checkPermission(permission: String): Boolean {\r\n        return ActivityCompat.checkSelfPermission(\r\n            this,\r\n            permission\r\n        ) == PackageManager.PERMISSION_GRANTED\r\n    }\r\n\r\n    protected open fun checkPermission(permissions: Array<String>): Boolean {\r\n        for (permission in permissions) {\r\n            val allow = ActivityCompat.checkSelfPermission(\r\n                this,\r\n                permission\r\n            ) == PackageManager.PERMISSION_GRANTED\r\n            if (!allow) return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseActivity.kt	(date 1733197159909)
@@ -15,8 +15,11 @@
 import android.os.IBinder
 import android.os.Looper
 import android.provider.Settings
+import android.view.LayoutInflater
 import android.view.View
+import android.view.ViewGroup
 import android.view.WindowManager
+import android.widget.FrameLayout
 import android.widget.ImageView
 import android.widget.Toast
 import androidx.activity.result.contract.ActivityResultContracts
@@ -27,9 +30,10 @@
 import androidx.core.view.WindowInsetsCompat
 import androidx.core.view.WindowInsetsControllerCompat
 import androidx.viewbinding.ViewBinding
+import com.amazic.ads.util.AppOpenManager
 import com.ardrawing.sketch.anime.drawing.dialog.PermissionDialog
 import com.ardrawing.sketch.anime.drawing.utils.SystemUtil
-
+import com.ardrawing.sketch.anime.drawing.R
 
 abstract class BaseActivity<T : ViewBinding> : AppCompatActivity() {
 
@@ -187,6 +191,7 @@
         for (per in permissions) {
             if (!checkPermission(per)) {
                 if (ActivityCompat.shouldShowRequestPermissionRationale(this, per)) {
+                    AppOpenManager.getInstance().disableAppResumeWithActivity(javaClass)
                     val intent = Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)
                     val uri = Uri.fromParts("package", applicationContext.packageName, null)
                     intent.data = uri
@@ -225,8 +230,33 @@
         }
         return true
     }
+    private var backgroundView: FrameLayout? = null
+    private var loadingLayout: View? = null
+    protected open fun showLoading() {
+        if (loadingLayout == null) {
+            val li = LayoutInflater.from(this)
+            loadingLayout = li.inflate(R.layout.layout_loading_progress, null, false)
+            backgroundView = loadingLayout!!.findViewById(R.id.root)
+            val rootView = findViewById<ViewGroup>(android.R.id.content)
+            rootView.addView(
+                loadingLayout,
+                ViewGroup.LayoutParams(
+                    ViewGroup.LayoutParams.MATCH_PARENT,
+                    ViewGroup.LayoutParams.MATCH_PARENT
+                )
+            )
+            backgroundView!!.isClickable = true
+        }
+    }
 
-
+    protected open fun hideLoading() {
+        if (loadingLayout != null) {
+            val rootView = findViewById<ViewGroup>(android.R.id.content)
+            rootView.removeView(loadingLayout)
+            if (backgroundView != null) backgroundView!!.isClickable = false
+            loadingLayout = null
+        }
+    }
 
 }
 
Index: sdk/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Fri Nov 29 09:39:25 ICT 2024\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/sdk/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/sdk/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
--- a/sdk/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/sdk/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties	(date 1733193509738)
@@ -1,1 +1,1 @@
-#Fri Nov 29 09:39:25 ICT 2024
+#Tue Dec 03 09:38:29 ICT 2024
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArUploadInllustrationActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.ar\r\n\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.SurfaceTexture\r\nimport android.media.MediaScannerConnection\r\nimport android.net.Uri\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport android.util.Log\r\nimport android.view.Surface\r\nimport android.view.TextureView\r\nimport android.view.View\r\nimport android.widget.SeekBar\r\nimport android.widget.Toast\r\nimport androidx.camera.core.CameraSelector\r\nimport androidx.camera.core.ImageCapture\r\nimport androidx.camera.core.Preview\r\nimport androidx.camera.lifecycle.ProcessCameraProvider\r\nimport androidx.camera.video.FileOutputOptions\r\nimport androidx.camera.video.Quality\r\nimport androidx.camera.video.QualitySelector\r\nimport androidx.camera.video.Recorder\r\nimport androidx.camera.video.Recording\r\nimport androidx.camera.video.VideoCapture\r\nimport androidx.camera.video.VideoRecordEvent\r\nimport androidx.core.content.ContextCompat\r\nimport com.ardrawing.sketch.anime.drawing.R\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityArCameraBinding\r\nimport com.ardrawing.sketch.anime.drawing.dialog.DialogSaveVideo\r\nimport com.ardrawing.sketch.anime.drawing.utils.CameraUtils\r\nimport com.google.common.util.concurrent.ListenableFuture\r\n//import org.opencv.android.OpenCVLoader\r\n//import org.opencv.android.Utils\r\n//import org.opencv.core.Core\r\n//import org.opencv.core.CvType\r\n//import org.opencv.core.Mat\r\n//import org.opencv.core.Scalar\r\n//import org.opencv.core.Size\r\n//import org.opencv.imgproc.Imgproc\r\nimport java.io.File\r\nimport com.ardrawing.sketch.anime.drawing.widget.tap\r\nimport org.opencv.android.OpenCVLoader\r\nimport org.opencv.android.Utils\r\nimport org.opencv.core.Core\r\nimport org.opencv.core.CvType\r\nimport org.opencv.core.Mat\r\nimport org.opencv.core.Scalar\r\nimport org.opencv.core.Size\r\nimport org.opencv.imgproc.Imgproc\r\n\r\nclass ArUploadInllustrationActivity : BaseActivity<ActivityArCameraBinding>() {\r\n    private var isFlashOn = false\r\n    private var isFlipped = false\r\n    private var videoCapture: VideoCapture<Recorder>? = null\r\n    private var recording: Recording? = null\r\n    private var recordStartTime: Long = 0L\r\n    private val handler = Handler()\r\n    private var imageCapture: ImageCapture? = null\r\n    private var videoFilePath: String? = null\r\n    private var elapsedTimeWhenPaused: Long = 0L\r\n    private var ischeckClock = true\r\n    private lateinit var imgall : Bitmap\r\n    override fun setViewBinding(): ActivityArCameraBinding {\r\n        return ActivityArCameraBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n\r\n        if (!OpenCVLoader.initDebug()) {\r\n            Toast.makeText(this, \"Không thể tải OpenCV\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n        val imageUriString = intent.getStringExtra(\"image_uri\")\r\n\r\n        if (imageUriString != null) {\r\n            val imageUri = Uri.parse(imageUriString)\r\n            Log.d(\"ArCameraActivity\", \"Image URI: $imageUri\")\r\n            imgall = BitmapFactory.decodeStream(contentResolver.openInputStream(imageUri))\r\n            binding.progressBar.visibility = View.VISIBLE\r\n\r\n            Thread {\r\n                val mat = Mat()\r\n                Utils.bitmapToMat(imgall, mat)\r\n                processImage(mat)\r\n                runOnUiThread {\r\n                    binding.imageView.setImageBitmap(imgall)\r\n                    binding.progressBar.visibility = View.GONE\r\n                }\r\n            }.start()\r\n        }\r\n        ZoomImg()\r\n        binding.imageView.alpha = 1f\r\n        binding.seekBar.max = 100\r\n        binding.seekBar.progress = 100\r\n        binding.seekBar.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {\r\n            override fun onProgressChanged(seekBar: SeekBar?, progress: Int, fromUser: Boolean) {\r\n                binding.imageView.alpha = progress / 100f\r\n            }\r\n\r\n            override fun onStartTrackingTouch(seekBar: SeekBar?) {}\r\n\r\n            override fun onStopTrackingTouch(seekBar: SeekBar?) {}\r\n        })\r\n\r\n        startCamera()\r\n    }\r\n\r\n\r\n\r\n    private fun processImage(mat: Mat) {\r\n\r\n        val gray = Mat()\r\n        Imgproc.cvtColor(mat, gray, Imgproc.COLOR_BGR2GRAY)\r\n        val equalized = Mat()\r\n        Imgproc.equalizeHist(gray, equalized)\r\n        val sobelX = Mat()\r\n        val sobelY = Mat()\r\n        Imgproc.Sobel(equalized, sobelX, CvType.CV_16S, 1, 0)\r\n        Imgproc.Sobel(equalized, sobelY, CvType.CV_16S, 0, 1)\r\n        val absSobelX = Mat()\r\n        val absSobelY = Mat()\r\n        Core.convertScaleAbs(sobelX, absSobelX)\r\n        Core.convertScaleAbs(sobelY, absSobelY)\r\n        val edges = Mat()\r\n        Core.addWeighted(absSobelX, 0.5, absSobelY, 0.5, 0.0, edges)\r\n        val blurred = Mat()\r\n        Imgproc.GaussianBlur(edges, blurred, Size(1.0, 1.0), 0.0)\r\n        val sketch = Mat(mat.size(), CvType.CV_8UC4, Scalar(0.0, 0.0, 0.0, 0.0))  // Nền trong suốt\r\n        for (i in 0 until blurred.rows()) {\r\n            for (j in 0 until blurred.cols()) {\r\n                if (blurred.get(i, j)[0] > 50.0) {\r\n                    sketch.put(i, j, byteArrayOf(0, 0, 0, 255.toByte()))\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        imgall = Bitmap.createBitmap(sketch.cols(), sketch.rows(), Bitmap.Config.ARGB_8888)\r\n        Utils.matToBitmap(sketch, imgall)\r\n    }\r\n\r\n\r\n    private fun startCamera() {\r\n        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\r\n        bindCamera(cameraProviderFuture)\r\n    }\r\n\r\n    private fun bindCamera(cameraProviderFuture: ListenableFuture<ProcessCameraProvider>) {\r\n        cameraProviderFuture.addListener({\r\n            val cameraProvider: ProcessCameraProvider = cameraProviderFuture.get()\r\n            cameraProvider.unbindAll()\r\n            val preview = Preview.Builder().build().also { preview ->\r\n                preview.setSurfaceProvider(binding.previewView.surfaceProvider)\r\n            }\r\n\r\n            val recorder = Recorder.Builder()\r\n                .setQualitySelector(QualitySelector.from(Quality.HD))\r\n                .build()\r\n            videoCapture = VideoCapture.withOutput(recorder)\r\n\r\n            imageCapture = ImageCapture.Builder()\r\n                .setFlashMode(if (isFlashOn) ImageCapture.FLASH_MODE_ON else ImageCapture.FLASH_MODE_OFF)\r\n                .build()\r\n\r\n            val cameraSelector = CameraSelector.DEFAULT_BACK_CAMERA\r\n            try {\r\n                cameraProvider.bindToLifecycle(\r\n                    this,\r\n                    cameraSelector,\r\n                    preview,\r\n                    videoCapture,\r\n                    imageCapture\r\n                )\r\n            } catch (exc: Exception) {\r\n                Log.e(\"ArCameraActivity\", \"Failed to bind camera\", exc)\r\n            }\r\n        }, ContextCompat.getMainExecutor(this))\r\n    }\r\n\r\n    private fun startRecording() {\r\n        val videoCapture = this.videoCapture ?: return\r\n        videoFilePath = CameraUtils.saveVideo(this).absolutePath\r\n        val outputOptions = FileOutputOptions.Builder(File(videoFilePath)).build()\r\n        recording = videoCapture.output\r\n            .prepareRecording(this, outputOptions)\r\n            .start(ContextCompat.getMainExecutor(this)) { recordEvent ->\r\n                when (recordEvent) {\r\n                    is VideoRecordEvent.Start -> {\r\n                        binding.txtTimeRecod.visibility = View.VISIBLE\r\n                        binding.btnRecod.setImageResource(R.drawable.ic_recod_start)\r\n                        recordStartTime = System.currentTimeMillis()\r\n                        binding.txtSave.visibility = View.GONE\r\n                        handler.post(updateTimeRunnable)\r\n                    }\r\n\r\n                    is VideoRecordEvent.Finalize -> {\r\n                        if (!recordEvent.hasError()) {\r\n                            binding.txtTimeRecod.visibility = View.GONE\r\n                            binding.btnRecod.setImageResource(R.drawable.ic_recod_stop)\r\n                            handler.removeCallbacks(updateTimeRunnable)\r\n                            binding.txtSave.setText(R.string.video_saved)\r\n                            binding.txtSave.visibility = View.VISIBLE\r\n                            MediaScannerConnection.scanFile(\r\n                                this,\r\n                                arrayOf(videoFilePath),\r\n                                null\r\n                            ) { path, uri ->\r\n                                Log.d(\"MediaScanner\", \"Đã quét $path: $uri\")\r\n                            }\r\n                            Handler(Looper.getMainLooper()).postDelayed({\r\n                                binding.txtSave.visibility = View.GONE\r\n                            }, 2000)\r\n                        } else {\r\n                            Log.e(\"CameraX\", \"Recording error: ${recordEvent.error}\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        handler.removeCallbacks(updateTimeRunnable)\r\n        recording?.close()\r\n        recording = null\r\n    }\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        startCamera()\r\n        CameraUtils.toggleFlash(\r\n            context = this,\r\n            lifecycleOwner = this,\r\n            enable = isFlashOn,\r\n            onSuccess = {\r\n                Log.d(\"ArCameraActivity\", \"Flash được bật/tắt thành công\")\r\n            },\r\n            onError = { errorMessage ->\r\n                Log.e(\"ArCameraActivity\", errorMessage)\r\n            }\r\n        )\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        recording?.stop()\r\n        recording = null\r\n        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\r\n        cameraProviderFuture.addListener({\r\n            val cameraProvider = cameraProviderFuture.get()\r\n            cameraProvider.unbindAll()\r\n        }, ContextCompat.getMainExecutor(this))\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.tvFlash.setOnClickListener {\r\n            isFlashOn = !isFlashOn\r\n            CameraUtils.toggleFlash(\r\n                context = this,\r\n                lifecycleOwner = this,\r\n                enable = isFlashOn,\r\n                onSuccess = {\r\n                    Log.d(\"ArCameraActivity\", \"Flash được bật/tắt thành công\")\r\n                },\r\n                onError = { errorMessage ->\r\n                    Log.e(\"ArCameraActivity\", errorMessage)\r\n                }\r\n            )\r\n            binding.tvFlash.setCompoundDrawablesWithIntrinsicBounds(\r\n                0,\r\n                if (isFlashOn) R.drawable.ic_flash_select else R.drawable.ic_flash,\r\n                0,\r\n                0\r\n            )\r\n        }\r\n        binding.tvFinish.setOnClickListener {\r\n            if (recording != null) {\r\n                recording?.pause()\r\n                handler.removeCallbacks(updateTimeRunnable)\r\n                elapsedTimeWhenPaused = System.currentTimeMillis() - recordStartTime\r\n                val saveVideoDialog = DialogSaveVideo(this,\r\n\r\n                    onSave = {\r\n                        CameraUtils.saveVideo(this)\r\n//                    Toast.makeText(this, \"Video saved!\", Toast.LENGTH_SHORT).show()\r\n                        finish()\r\n                    },\r\n                    onDiscard = {\r\n                        videoFilePath?.let { path ->\r\n                            val videoFile = File(path)\r\n                            if (videoFile.exists()) {\r\n                                videoFile.delete()\r\n//                            Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                            }\r\n                        }\r\n//                    Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                        finish()\r\n                    }\r\n\r\n                )\r\n                saveVideoDialog.setOnDismissListener {\r\n                    recording?.resume()\r\n                    recordStartTime = System.currentTimeMillis() - elapsedTimeWhenPaused\r\n                    handler.post(updateTimeRunnable)\r\n                }\r\n                saveVideoDialog.show()\r\n            } else {\r\n                finish()\r\n            }\r\n\r\n        }\r\n        binding.btnRecod.tap {\r\n            Log.d(\"CameraX\", \"btnRecod\")\r\n\r\n            if (recording != null) {\r\n                recording?.stop()\r\n                recording = null\r\n            } else {\r\n                startRecording()\r\n            }\r\n        }\r\n        binding.tvFlip.setOnClickListener {\r\n            isFlipped = !isFlipped\r\n            binding.imageView.scaleX = if (isFlipped) -1f else 1f\r\n        }\r\n        binding.tvPhoto.tap {\r\n            Log.d(\"CameraX\", \"click photo\")\r\n\r\n            CameraUtils.takePicture(\r\n                imageCapture = this.imageCapture,\r\n                isFlashOn = isFlashOn,\r\n                context = this,\r\n                executor = ContextCompat.getMainExecutor(this),\r\n                onImageSaved = { photoPath ->\r\n                    Log.d(\"CameraX\", \"Ảnh đã được lưu thành công: $photoPath\")\r\n                    binding.txtSave.setText(R.string.photo_saved)\r\n                    binding.txtSave.visibility = View.VISIBLE\r\n                    Handler(Looper.getMainLooper()).postDelayed({\r\n                        binding.txtSave.visibility = View.GONE\r\n                    }, 3000)\r\n                },\r\n                onError = { exception ->\r\n                    Log.e(\"CameraX\", \"Chụp ảnh không thành công: ${exception.message}\", exception)\r\n                }\r\n            )\r\n        }\r\n\r\n        binding.btnClock.setOnClickListener {\r\n            ischeckClock = !ischeckClock\r\n            binding.btnClock.setImageResource(if (ischeckClock) R.drawable.ic_un_clock else R.drawable.ic_clock)\r\n            if (ischeckClock) {\r\n                ZoomImg()\r\n            } else {\r\n                binding.imageView.controller.settings.apply {\r\n                    setPanEnabled(false)\r\n                    setDoubleTapEnabled(false)\r\n                    setZoomEnabled(false)\r\n                    setRotationEnabled(false)\r\n                    setFillViewport(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private val updateTimeRunnable = object : Runnable {\r\n        override fun run() {\r\n            val elapsedTime = System.currentTimeMillis() - recordStartTime\r\n            val seconds = (elapsedTime / 1000) % 60\r\n            val minutes = (elapsedTime / (1000 * 60)) % 60\r\n            val hours = (elapsedTime / (1000 * 60 * 60))\r\n\r\n            binding.txtTimeRecod.text = String.format(\"%02d:%02d:%02d\", hours, minutes, seconds)\r\n\r\n            handler.postDelayed(this, 1000)\r\n        }\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        if (recording != null) {\r\n            recording?.stop()\r\n            recording = null\r\n            handler.removeCallbacks(updateTimeRunnable)\r\n            binding.txtSave.visibility = View.GONE\r\n            val saveVideoDialog = DialogSaveVideo(this,\r\n                onSave = {\r\n                    CameraUtils.saveVideo(this)\r\n//                    Toast.makeText(this, \"Video saved!\", Toast.LENGTH_SHORT).show()\r\n                    finish()\r\n                },\r\n                onDiscard = {\r\n                    videoFilePath?.let { path ->\r\n                        val videoFile = File(path)\r\n                        if (videoFile.exists()) {\r\n                            videoFile.delete()\r\n//                            Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    }\r\n//                    Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                    finish()\r\n                }\r\n            )\r\n            saveVideoDialog.setOnDismissListener {\r\n                recording?.resume()\r\n                recordStartTime = System.currentTimeMillis() - elapsedTimeWhenPaused\r\n                handler.post(updateTimeRunnable)\r\n            }\r\n            saveVideoDialog.show()\r\n        } else {\r\n            super.onBackPressed()\r\n        }\r\n    }\r\n\r\n    fun ZoomImg() {\r\n        binding.imageView.controller.settings.apply {\r\n            setMaxZoom(5f)\r\n            setMinZoom(0.01f)\r\n            setPanEnabled(true)\r\n            setDoubleTapEnabled(false)\r\n            setZoomEnabled(true)\r\n            setRotationEnabled(true)\r\n            setOverzoomFactor(1000f)\r\n            setFillViewport(false);\r\n            setOverscrollDistance(this@ArUploadInllustrationActivity, 1000f, 1000f)\r\n        }\r\n    }\r\n\r\n    override fun dataObservable() {}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArUploadInllustrationActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArUploadInllustrationActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArUploadInllustrationActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArUploadInllustrationActivity.kt	(date 1733212937328)
@@ -25,10 +25,16 @@
 import androidx.camera.video.VideoCapture
 import androidx.camera.video.VideoRecordEvent
 import androidx.core.content.ContextCompat
+import com.amazic.ads.util.Admob
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.AppOpenManager
+import com.amazic.ads.util.BannerGravity
 import com.ardrawing.sketch.anime.drawing.R
+import com.ardrawing.sketch.anime.drawing.ads.InterAdHelper
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityArCameraBinding
 import com.ardrawing.sketch.anime.drawing.dialog.DialogSaveVideo
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.utils.CameraUtils
 import com.google.common.util.concurrent.ListenableFuture
 //import org.opencv.android.OpenCVLoader
@@ -61,13 +67,27 @@
     private var videoFilePath: String? = null
     private var elapsedTimeWhenPaused: Long = 0L
     private var ischeckClock = true
-    private lateinit var imgall : Bitmap
+    private lateinit var imgall: Bitmap
     override fun setViewBinding(): ActivityArCameraBinding {
         return ActivityArCameraBinding.inflate(layoutInflater)
     }
 
     override fun initView() {
-
+        AppOpenManager.getInstance().enableAppResumeWithActivity(this.javaClass)
+        if (SharePrefRemote.get_config(
+                this,
+                SharePrefRemote.banner_draw
+            ) && AdsConsentManager.getConsentResult(this)
+        ) {
+            Admob.getInstance().loadCollapsibleBanner(
+                this,
+                getString(R.string.banner_draw),
+                BannerGravity.bottom
+            )
+            binding.include.visibility = View.VISIBLE
+        } else {
+            binding.include.visibility = View.GONE
+        }
         if (!OpenCVLoader.initDebug()) {
             Toast.makeText(this, "Không thể tải OpenCV", Toast.LENGTH_SHORT).show()
             return
@@ -108,7 +128,6 @@
     }
 
 
-
     private fun processImage(mat: Mat) {
 
         val gray = Mat()
@@ -219,6 +238,7 @@
                 }
             }
     }
+
     override fun onDestroy() {
         super.onDestroy()
         handler.removeCallbacks(updateTimeRunnable)
@@ -296,7 +316,8 @@
                             }
                         }
 //                    Toast.makeText(this, "Video discarded.", Toast.LENGTH_SHORT).show()
-                        finish()
+
+                        backMain()
                     }
 
                 )
@@ -307,7 +328,7 @@
                 }
                 saveVideoDialog.show()
             } else {
-                finish()
+                backMain()
             }
 
         }
@@ -364,6 +385,20 @@
         }
     }
 
+    fun backMain() {
+        showLoading()
+        InterAdHelper.showInterAd(
+            this, SharePrefRemote.get_config(
+                this,
+                SharePrefRemote.inter_draw
+            ),
+            getString(R.string.inter_draw)
+        ) {
+            finish()
+            hideLoading()
+        }
+    }
+
     private val updateTimeRunnable = object : Runnable {
         override fun run() {
             val elapsedTime = System.currentTimeMillis() - recordStartTime
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.home\r\n\r\nimport android.app.Activity.RESULT_OK\r\nimport android.content.Intent\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseFragment\r\nimport com.ardrawing.sketch.anime.drawing.databinding.FragmentHomeBinding\r\nimport com.ardrawing.sketch.anime.drawing.ui.ar.ArUploadInllustrationActivity\r\nimport com.ardrawing.sketch.anime.drawing.ui.detail.DetailActivity\r\n\r\nclass HomeFragment : BaseFragment<FragmentHomeBinding>() {\r\n\r\n    private lateinit var homeAdapter: HomeAdapter\r\n\r\n    override fun inflateBinding(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?\r\n    ): FragmentHomeBinding {\r\n        val binding = FragmentHomeBinding.inflate(inflater, container, false)\r\n        initView(binding)\r\n        viewListener(binding)\r\n        return binding\r\n\r\n    }\r\n\r\n    companion object {\r\n        private const val REQUEST_PICK_IMAGE = 1\r\n    }\r\n\r\n    fun initView(binding: FragmentHomeBinding) {\r\n        val layoutManager = GridLayoutManager(requireContext(), 2)\r\n        binding.rcvView.layoutManager = layoutManager\r\n        homeAdapter = HomeAdapter(requireActivity(), listHome) { homeId ->\r\n            val intent = Intent(requireActivity(), DetailActivity::class.java).apply {\r\n                putExtra(\"HOME_ID\", homeId)\r\n            }\r\n            startActivity(intent)\r\n        }\r\n        binding.rcvView.adapter = homeAdapter\r\n    }\r\n\r\n    fun viewListener(binding: FragmentHomeBinding) {\r\n        binding.layouUpload.setOnClickListener {\r\n            startPhotoPicker()\r\n        }\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        when (requestCode) {\r\n            REQUEST_PICK_IMAGE -> if (resultCode == RESULT_OK) {\r\n                data?.data?.let { uri ->\r\n                    try {\r\n                        val imgUri = data?.data\r\n                        if (imgUri != null) {\r\n                            val intent =\r\n                                Intent(requireActivity(), ArUploadInllustrationActivity::class.java)\r\n                            intent.putExtra(\"image_uri\", imgUri.toString())\r\n                            startActivity(intent)\r\n                        } else {\r\n                            Log.e(\"ArCameraActivity\", \"khng co link anh \")\r\n                        }\r\n                    } catch (e: Exception) {\r\n                        Log.e(\"ArCameraActivity\", \"Error loading image: ${e.message}\")\r\n                    }\r\n                }\r\n            } else {\r\n\r\n                Log.e(\"ArCameraActivity\", \"khong chon anh\")\r\n            }\r\n            else -> super.onActivityResult(requestCode, resultCode, data)\r\n        }\r\n    }\r\n\r\n    private fun startPhotoPicker() {\r\n        val photoPickerIntent = Intent(Intent.ACTION_PICK)\r\n        photoPickerIntent.type = \"image/*\"\r\n        startActivityForResult(photoPickerIntent, REQUEST_PICK_IMAGE)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/home/HomeFragment.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/home/HomeFragment.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/home/HomeFragment.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/home/HomeFragment.kt	(date 1733212578754)
@@ -6,8 +6,12 @@
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.recyclerview.widget.GridLayoutManager
+import com.amazic.ads.util.AppOpenManager
+import com.ardrawing.sketch.anime.drawing.R
+import com.ardrawing.sketch.anime.drawing.ads.InterAdHelper
 import com.ardrawing.sketch.anime.drawing.base.BaseFragment
 import com.ardrawing.sketch.anime.drawing.databinding.FragmentHomeBinding
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.ui.ar.ArUploadInllustrationActivity
 import com.ardrawing.sketch.anime.drawing.ui.detail.DetailActivity
 
@@ -34,10 +38,20 @@
         val layoutManager = GridLayoutManager(requireContext(), 2)
         binding.rcvView.layoutManager = layoutManager
         homeAdapter = HomeAdapter(requireActivity(), listHome) { homeId ->
-            val intent = Intent(requireActivity(), DetailActivity::class.java).apply {
-                putExtra("HOME_ID", homeId)
-            }
-            startActivity(intent)
+            showLoading()
+            InterAdHelper.showInterAd(
+                requireActivity(), SharePrefRemote.get_config(
+                    requireActivity(),
+                    SharePrefRemote.inter_home
+                ),
+                getString(R.string.inter_home)
+            ) {
+                val intent = Intent(requireActivity(), DetailActivity::class.java).apply {
+                    putExtra("HOME_ID", homeId)
+                }
+                startActivity(intent)
+                hideLoading()
+            }
         }
         binding.rcvView.adapter = homeAdapter
     }
@@ -76,8 +90,15 @@
     }
 
     private fun startPhotoPicker() {
+        AppOpenManager.getInstance().disableAppResumeWithActivity(requireActivity().javaClass)
         val photoPickerIntent = Intent(Intent.ACTION_PICK)
         photoPickerIntent.type = "image/*"
         startActivityForResult(photoPickerIntent, REQUEST_PICK_IMAGE)
     }
+
+    override fun onResume() {
+        super.onResume()
+        AppOpenManager.getInstance().enableAppResumeWithActivity(requireActivity().javaClass)
+
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/AdsSplash.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/AdsSplash.java b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/AdsSplash.java
new file mode 100644
--- /dev/null	(date 1733199636619)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/AdsSplash.java	(date 1733199636619)
@@ -0,0 +1,117 @@
+package com.ardrawing.sketch.anime.drawing.ads;
+
+
+import android.app.Activity;
+import android.util.Log;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.amazic.ads.callback.AdCallback;
+import com.amazic.ads.callback.InterCallback;
+import com.amazic.ads.util.Admob;
+import com.amazic.ads.util.AppOpenManager;
+import com.ardrawing.sketch.anime.drawing.R;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Random;
+
+public class AdsSplash {
+    private static final String TAG = "AdsSplash";
+    private STATE state;
+
+    public AdsSplash() {
+        this.state = STATE.NO_ADS;
+    }
+
+    public static AdsSplash init(boolean showInter, boolean showOpen, String rate) {
+        AdsSplash adsSplash = new AdsSplash();
+        Log.d("AdsSplash", "init: ");
+        if (!Admob.isShowAllAds) {
+            adsSplash.setState(STATE.NO_ADS);
+        } else if (showInter && showOpen) {
+            adsSplash.checkShowInterOpenSplash(rate);
+        } else if (showInter) {
+            adsSplash.setState(STATE.INTER);
+        } else if (showOpen) {
+            adsSplash.setState(STATE.OPEN);
+        } else {
+            adsSplash.setState(STATE.NO_ADS);
+        }
+
+        return adsSplash;
+    }
+
+    private void checkShowInterOpenSplash(String rate) {
+        int rateInter;
+        int rateOpen;
+        try {
+            rateInter = Integer.parseInt(rate.trim().split("_")[1].trim());
+            rateOpen = Integer.parseInt(rate.trim().split("_")[0].trim());
+        } catch (Exception var5) {
+            Log.d("AdsSplash", "checkShowInterOpenSplash: ");
+            rateInter = 0;
+            rateOpen = 0;
+        }
+
+        Log.d("AdsSplash", "rateInter: " + rateInter + " - rateOpen: " + rateOpen);
+        Log.d("AdsSplash", "rateInter: " + rateInter + " - rateOpen: " + rateOpen);
+        if (rateInter >= 0 && rateOpen >= 0 && rateInter + rateOpen == 100) {
+            boolean isShowOpenSplash = (new Random()).nextInt(100) + 1 < rateOpen;
+            this.setState(isShowOpenSplash ? STATE.OPEN : STATE.INTER);
+        } else {
+            this.setState(STATE.NO_ADS);
+        }
+
+    }
+
+    public void setState(STATE state) {
+        this.state = state;
+    }
+
+    public STATE getState() {
+        return this.state;
+    }
+
+    public void showAdsSplashApi(AppCompatActivity activity, AdCallback openCallback, InterCallback interCallback) {
+        Log.d("AdsSplash", "state show: " + this.getState());
+        if (this.getState() == STATE.OPEN) {
+            loadOpenAppAdSplashFloor(activity, openCallback);
+        } else if (this.getState() == STATE.INTER) {
+            loadInterAdSplashFloor(activity, 3000, 20000, interCallback, true);
+        } else {
+            interCallback.onNextAction();
+        }
+
+    }
+
+    public void onCheckShowSplashWhenFail(AppCompatActivity activity, AdCallback openCallback, InterCallback interCallback) {
+        if (this.getState() == STATE.OPEN) {
+            AppOpenManager.getInstance().onCheckShowSplashWhenFailNew(activity, openCallback, 1000);
+        } else if (this.getState() == STATE.INTER) {
+            Admob.getInstance().onCheckShowSplashWhenFail(activity, interCallback, 1000);
+        }
+
+    }
+
+    static enum STATE {
+        INTER,
+        OPEN,
+        NO_ADS;
+
+        private STATE() {
+        }
+    }
+
+    public void loadOpenAppAdSplashFloor(Activity activity, AdCallback adCallback) {
+        List<String> list = new ArrayList<>();
+        list.add(activity.getString(R.string.open_splash));
+        AppOpenManager.getInstance().loadOpenAppAdSplashFloor(activity, list, true, adCallback);
+    }
+
+    public void loadInterAdSplashFloor(Activity activity, int timeDelay, int timeOut, InterCallback callback, boolean isNextActionWhenFailedInter) {
+        List<String> list = new ArrayList<>();
+        list.add(activity.getString(R.string.inter_splash));
+        Admob.getInstance().loadSplashInterAds3(activity, list, timeDelay, timeOut, callback, isNextActionWhenFailedInter);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/tutorial/TutorialActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.tutorial\r\n\r\nimport android.content.Intent\r\nimport android.media.MediaPlayer\r\nimport android.net.Uri\r\nimport android.util.Log\r\nimport com.ardrawing.sketch.anime.drawing.R\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityTutorialBinding\r\nimport com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefUtilsKotlin\r\nimport com.ardrawing.sketch.anime.drawing.ui.ar.ArCameraActivity\r\n\r\nclass TutorialActivity : BaseActivity<ActivityTutorialBinding>() {\r\n    private var ischeck = false\r\n    override fun setViewBinding(): ActivityTutorialBinding {\r\n        return ActivityTutorialBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n        val videoUri: Uri = Uri.parse(\"android.resource://${packageName}/raw/ar_video2\")\r\n        binding.view2.setVideoURI(videoUri)\r\n        binding.view2.setOnPreparedListener { mediaPlayer: MediaPlayer ->\r\n            mediaPlayer.isLooping = true\r\n        }\r\n        binding.view2.start()\r\n    }\r\n\r\n    override fun viewListener() {\r\n        val imgDraw = intent.getIntExtra(\"Img_Draw\",-1)\r\n        Log.d(\"imgDraw\", \"imgDraw: $imgDraw\")\r\n        binding.tvGoit.setOnClickListener{\r\n            if (!ischeck){\r\n                SharePrefUtilsKotlin.forceTutorial(this,true)\r\n                val intent = Intent(this, ArCameraActivity::class.java).apply {\r\n                    putExtra(\"Img_Draw\", imgDraw)\r\n                }\r\n                startActivity(intent)\r\n                finish()\r\n            }else{\r\n                SharePrefUtilsKotlin.forceTutorial(this,false)\r\n                val intent = Intent(this, ArCameraActivity::class.java).apply {\r\n                    putExtra(\"Img_Draw\", imgDraw)\r\n                }\r\n                startActivity(intent)\r\n                finish()\r\n            }\r\n\r\n        }\r\n        binding.btnBack.setOnClickListener{\r\n            finish()\r\n        }\r\n        binding.tvDont.setOnClickListener {\r\n            ischeck = !ischeck\r\n            binding.tvDont.setCompoundDrawablesRelativeWithIntrinsicBounds(\r\n                if (ischeck) R.drawable.icon_check_tutorial_selected else R.drawable.icon_check_tutorial,\r\n                0,\r\n                0,\r\n                0\r\n            )\r\n        }\r\n    }\r\n\r\n    override fun dataObservable() {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/tutorial/TutorialActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/tutorial/TutorialActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/tutorial/TutorialActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/tutorial/TutorialActivity.kt	(date 1733209702708)
@@ -4,9 +4,14 @@
 import android.media.MediaPlayer
 import android.net.Uri
 import android.util.Log
+import android.view.View
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.manager.native_ad.NativeBuilder
+import com.amazic.ads.util.manager.native_ad.NativeManager
 import com.ardrawing.sketch.anime.drawing.R
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityTutorialBinding
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefUtilsKotlin
 import com.ardrawing.sketch.anime.drawing.ui.ar.ArCameraActivity
 
@@ -17,6 +22,7 @@
     }
 
     override fun initView() {
+        loadNative()
         val videoUri: Uri = Uri.parse("android.resource://${packageName}/raw/ar_video2")
         binding.view2.setVideoURI(videoUri)
         binding.view2.setOnPreparedListener { mediaPlayer: MediaPlayer ->
@@ -63,4 +69,28 @@
     override fun dataObservable() {
 
     }
+    private fun loadNative() {
+        try {
+            if (SharePrefRemote.get_config(this, SharePrefRemote.native_tutorial) &&
+                AdsConsentManager.getConsentResult(this)
+            ) {
+                binding.frAds.visibility = View.VISIBLE
+                val nativeBuilder = NativeBuilder(
+                    this,
+                    binding.frAds,
+                    R.layout.ads_native_small_bottom_shimer,
+                    R.layout.layout_native_small_bottom
+                )
+                nativeBuilder.setListIdAd(listOf(getString(R.string.native_tutorial)))
+                val nativeManager = NativeManager(this, this, nativeBuilder)
+            } else {
+                binding.frAds.visibility = View.GONE
+                binding.frAds.removeAllViews()
+            }
+        } catch (exception: Exception) {
+            exception.printStackTrace()
+            binding.frAds.visibility = View.GONE
+            binding.frAds.removeAllViews()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/App.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/App.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/App.kt
new file mode 100644
--- /dev/null	(date 1733199376024)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/App.kt	(date 1733199376024)
@@ -0,0 +1,29 @@
+package com.ardrawing.sketch.anime.drawing
+
+import com.amazic.ads.util.AdsApplication
+import com.amazic.ads.util.AppOpenManager
+import com.ardrawing.sketch.anime.drawing.ui.splash.SplashActivity
+import com.google.android.gms.ads.MobileAds
+
+
+
+class App : AdsApplication() {
+    override fun onCreate() {
+      MobileAds.initialize(this) { }
+        AppOpenManager.getInstance().disableAppResumeWithActivity(SplashActivity::class.java)
+        super.onCreate()
+
+    }
+
+    override fun getAppTokenAdjust(): String {
+        return ""
+    }
+
+    override fun getFacebookID(): String {
+        return ""
+    }
+
+    override fun buildDebug(): Boolean? {
+        return null
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArCameraActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.ar\r\n\r\nimport android.content.Intent\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.SurfaceTexture\r\nimport android.media.MediaScannerConnection\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport android.util.Log\r\nimport android.view.Surface\r\nimport android.view.TextureView\r\nimport android.view.View\r\nimport android.widget.SeekBar\r\nimport android.widget.Toast\r\nimport androidx.camera.core.CameraSelector\r\nimport androidx.camera.core.ImageCapture\r\nimport androidx.camera.core.Preview\r\nimport androidx.camera.lifecycle.ProcessCameraProvider\r\nimport androidx.camera.video.FileOutputOptions\r\nimport androidx.camera.video.Quality\r\nimport androidx.camera.video.QualitySelector\r\nimport androidx.camera.video.Recorder\r\nimport androidx.camera.video.Recording\r\nimport androidx.camera.video.VideoCapture\r\nimport androidx.camera.video.VideoRecordEvent\r\nimport androidx.core.content.ContextCompat\r\nimport com.ardrawing.sketch.anime.drawing.R\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityArCameraBinding\r\nimport com.ardrawing.sketch.anime.drawing.dialog.DialogSaveVideo\r\nimport com.ardrawing.sketch.anime.drawing.ui.main.MainActivity\r\nimport com.ardrawing.sketch.anime.drawing.utils.CameraUtils\r\nimport com.ardrawing.sketch.anime.drawing.widget.tap\r\nimport com.google.common.util.concurrent.ListenableFuture\r\nimport org.opencv.android.OpenCVLoader\r\nimport org.opencv.android.Utils\r\nimport org.opencv.core.Mat\r\nimport java.io.File\r\n\r\nclass ArCameraActivity : BaseActivity<ActivityArCameraBinding>() {\r\n    private var isFlashOn = false\r\n    private var isFlipped = false\r\n    private var videoCapture: VideoCapture<Recorder>? = null\r\n    private var recording: Recording? = null\r\n    private var recordStartTime: Long = 0L\r\n    private val handler = Handler()\r\n    private var imageCapture: ImageCapture? = null\r\n    private var videoFilePath: String? = null\r\n    private var elapsedTimeWhenPaused: Long = 0L\r\n    private var ischeckClock = true\r\n\r\n\r\n    override fun setViewBinding(): ActivityArCameraBinding {\r\n        return ActivityArCameraBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n        if (!OpenCVLoader.initDebug()) {\r\n            Toast.makeText(this, \"Không thể tải OpenCV\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        val img = intent.getIntExtra(\"Img_Draw\", -1)\r\n        val bitmapTemp = BitmapFactory.decodeResource(resources, img)\r\n        val mat = Mat()\r\n        Utils.bitmapToMat(bitmapTemp, mat)\r\n\r\n        binding.imageView.setImageBitmap(bitmapTemp)\r\n        ZoomImg()\r\n        binding.imageView.alpha = 1f\r\n        binding.seekBar.max = 100\r\n        binding.seekBar.progress = 100\r\n        binding.seekBar.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {\r\n            override fun onProgressChanged(seekBar: SeekBar?, progress: Int, fromUser: Boolean) {\r\n                binding.imageView.alpha = progress / 100f\r\n            }\r\n\r\n            override fun onStartTrackingTouch(seekBar: SeekBar?) {}\r\n\r\n            override fun onStopTrackingTouch(seekBar: SeekBar?) {}\r\n        })\r\n\r\n        startCamera()\r\n    }\r\n\r\n    private fun startCamera() {\r\n        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\r\n        bindCamera(cameraProviderFuture)\r\n    }\r\n\r\n    private fun bindCamera(cameraProviderFuture: ListenableFuture<ProcessCameraProvider>) {\r\n        cameraProviderFuture.addListener({\r\n            val cameraProvider: ProcessCameraProvider = cameraProviderFuture.get()\r\n            cameraProvider.unbindAll()\r\n            val preview = Preview.Builder().build().also { preview ->\r\n                preview.setSurfaceProvider(binding.previewView.surfaceProvider)\r\n            }\r\n\r\n            val recorder = Recorder.Builder()\r\n                .setQualitySelector(QualitySelector.from(Quality.HD))\r\n                .build()\r\n            videoCapture = VideoCapture.withOutput(recorder)\r\n\r\n            imageCapture = ImageCapture.Builder()\r\n                .setFlashMode(if (isFlashOn) ImageCapture.FLASH_MODE_ON else ImageCapture.FLASH_MODE_OFF)\r\n                .build()\r\n\r\n            val cameraSelector = CameraSelector.DEFAULT_BACK_CAMERA\r\n            try {\r\n                cameraProvider.bindToLifecycle(\r\n                    this,\r\n                    cameraSelector,\r\n                    preview,\r\n                    videoCapture,\r\n                    imageCapture\r\n                )\r\n            } catch (exc: Exception) {\r\n                Log.e(\"ArCameraActivity\", \"Failed to bind camera\", exc)\r\n            }\r\n        }, ContextCompat.getMainExecutor(this))\r\n    }\r\n\r\n    private fun startRecording() {\r\n        val videoCapture = this.videoCapture ?: return\r\n        videoFilePath = CameraUtils.saveVideo(this).absolutePath\r\n        val outputOptions = FileOutputOptions.Builder(File(videoFilePath)).build()\r\n        recording = videoCapture.output\r\n            .prepareRecording(this, outputOptions)\r\n            .start(ContextCompat.getMainExecutor(this)) { recordEvent ->\r\n                when (recordEvent) {\r\n                    is VideoRecordEvent.Start -> {\r\n                        binding.txtTimeRecod.visibility = View.VISIBLE\r\n                        binding.btnRecod.setImageResource(R.drawable.ic_recod_start)\r\n                        recordStartTime = System.currentTimeMillis()\r\n                        binding.txtSave.visibility = View.GONE\r\n                        handler.post(updateTimeRunnable)\r\n                    }\r\n\r\n                    is VideoRecordEvent.Finalize -> {\r\n                        if (!recordEvent.hasError()) {\r\n                            binding.txtTimeRecod.visibility = View.GONE\r\n                            binding.btnRecod.setImageResource(R.drawable.ic_recod_stop)\r\n                            handler.removeCallbacks(updateTimeRunnable)\r\n                            binding.txtSave.setText(R.string.video_saved)\r\n                            binding.txtSave.visibility = View.VISIBLE\r\n                            MediaScannerConnection.scanFile(\r\n                                this,\r\n                                arrayOf(videoFilePath),\r\n                                null\r\n                            ) { path, uri ->\r\n                                Log.d(\"MediaScanner\", \"Đã quét $path: $uri\")\r\n                            }\r\n                            Handler(Looper.getMainLooper()).postDelayed({\r\n                                binding.txtSave.visibility = View.GONE\r\n                            }, 2000)\r\n                        } else {\r\n                            Log.e(\"CameraX\", \"Recording error: ${recordEvent.error}\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        handler.removeCallbacks(updateTimeRunnable)\r\n        recording?.close()\r\n        recording = null\r\n    }\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        startCamera()\r\n        CameraUtils.toggleFlash(\r\n            context = this,\r\n            lifecycleOwner = this,\r\n            enable = isFlashOn,\r\n            onSuccess = {\r\n                Log.d(\"ArCameraActivity\", \"Flash được bật/tắt thành công\")\r\n            },\r\n            onError = { errorMessage ->\r\n                Log.e(\"ArCameraActivity\", errorMessage)\r\n            }\r\n        )\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        recording?.stop()\r\n        recording = null\r\n        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\r\n        cameraProviderFuture.addListener({\r\n            val cameraProvider = cameraProviderFuture.get()\r\n            cameraProvider.unbindAll()\r\n        }, ContextCompat.getMainExecutor(this))\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.tvFlash.setOnClickListener {\r\n            isFlashOn = !isFlashOn\r\n            CameraUtils.toggleFlash(\r\n                context = this,\r\n                lifecycleOwner = this,\r\n                enable = isFlashOn,\r\n                onSuccess = {\r\n                    Log.d(\"ArCameraActivity\", \"Flash được bật/tắt thành công\")\r\n                },\r\n                onError = { errorMessage ->\r\n                    Log.e(\"ArCameraActivity\", errorMessage)\r\n                }\r\n            )\r\n            binding.tvFlash.setCompoundDrawablesWithIntrinsicBounds(\r\n                0,\r\n                if (isFlashOn) R.drawable.ic_flash_select else R.drawable.ic_flash,\r\n                0,\r\n                0\r\n            )\r\n        }\r\n        binding.tvFinish.setOnClickListener {\r\n            if (recording != null) {\r\n                recording?.pause()\r\n                handler.removeCallbacks(updateTimeRunnable)\r\n                elapsedTimeWhenPaused = System.currentTimeMillis() - recordStartTime\r\n                val saveVideoDialog = DialogSaveVideo(this,\r\n\r\n                    onSave = {\r\n                        CameraUtils.saveVideo(this)\r\n//                    Toast.makeText(this, \"Video saved!\", Toast.LENGTH_SHORT).show()\r\n                        BackMain()\r\n\r\n                    },\r\n                    onDiscard = {\r\n                        videoFilePath?.let { path ->\r\n                            val videoFile = File(path)\r\n                            if (videoFile.exists()) {\r\n                                videoFile.delete()\r\n//                            Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                            }\r\n                        }\r\n//                    Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                        BackMain()\r\n                    }\r\n\r\n                )\r\n                saveVideoDialog.setOnDismissListener {\r\n                    recording?.resume()\r\n                    recordStartTime = System.currentTimeMillis() - elapsedTimeWhenPaused\r\n                    handler.post(updateTimeRunnable)\r\n                }\r\n                saveVideoDialog.show()\r\n            } else {\r\n                BackMain()\r\n            }\r\n\r\n        }\r\n        binding.btnRecod.tap {\r\n            if (recording != null) {\r\n                recording?.stop()\r\n                recording = null\r\n            } else {\r\n                startRecording()\r\n            }\r\n        }\r\n        binding.tvFlip.setOnClickListener {\r\n            isFlipped = !isFlipped\r\n            binding.imageView.scaleX = if (isFlipped) -1f else 1f\r\n        }\r\n        binding.tvPhoto.tap {\r\n            CameraUtils.takePicture(\r\n                imageCapture = this.imageCapture,\r\n                isFlashOn = isFlashOn,\r\n                context = this,\r\n                executor = ContextCompat.getMainExecutor(this),\r\n                onImageSaved = { photoPath ->\r\n                    Log.d(\"CameraX\", \"Ảnh đã được lưu thành công: $photoPath\")\r\n                    binding.txtSave.setText(R.string.photo_saved)\r\n                    binding.txtSave.visibility = View.VISIBLE\r\n                    Handler(Looper.getMainLooper()).postDelayed({\r\n                        binding.txtSave.visibility = View.GONE\r\n                    }, 3000)\r\n                },\r\n                onError = { exception ->\r\n                    Log.e(\"CameraX\", \"Chụp ảnh không thành công: ${exception.message}\", exception)\r\n                }\r\n            )\r\n        }\r\n\r\n        binding.btnClock.setOnClickListener {\r\n            ischeckClock = !ischeckClock\r\n            binding.btnClock.setImageResource(if (ischeckClock) R.drawable.ic_un_clock else R.drawable.ic_clock)\r\n            if (ischeckClock) {\r\n                ZoomImg()\r\n            } else {\r\n                binding.imageView.controller.settings.apply {\r\n                    setPanEnabled(false)\r\n                    setDoubleTapEnabled(false)\r\n                    setZoomEnabled(false)\r\n                    setRotationEnabled(false)\r\n                    setFillViewport(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private val updateTimeRunnable = object : Runnable {\r\n        override fun run() {\r\n            val elapsedTime = System.currentTimeMillis() - recordStartTime\r\n            val seconds = (elapsedTime / 1000) % 60\r\n            val minutes = (elapsedTime / (1000 * 60)) % 60\r\n            val hours = (elapsedTime / (1000 * 60 * 60))\r\n\r\n            binding.txtTimeRecod.text = String.format(\"%02d:%02d:%02d\", hours, minutes, seconds)\r\n\r\n            handler.postDelayed(this, 1000)\r\n        }\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        if (recording != null) {\r\n            recording?.stop()\r\n            recording = null\r\n            handler.removeCallbacks(updateTimeRunnable)\r\n            binding.txtSave.visibility = View.GONE\r\n            val saveVideoDialog = DialogSaveVideo(this,\r\n\r\n                onSave = {\r\n                    CameraUtils.saveVideo(this)\r\n//                    Toast.makeText(this, \"Video saved!\", Toast.LENGTH_SHORT).show()\r\n                    BackMain()\r\n                },\r\n                onDiscard = {\r\n                    videoFilePath?.let { path ->\r\n                        val videoFile = File(path)\r\n                        if (videoFile.exists()) {\r\n                            videoFile.delete()\r\n//                            Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    }\r\n//                    Toast.makeText(this, \"Video discarded.\", Toast.LENGTH_SHORT).show()\r\n                    BackMain()\r\n\r\n                }\r\n            )\r\n            saveVideoDialog.setOnDismissListener {\r\n                recording?.resume()\r\n                recordStartTime = System.currentTimeMillis() - elapsedTimeWhenPaused\r\n                handler.post(updateTimeRunnable)\r\n            }\r\n            saveVideoDialog.show()\r\n        } else {\r\n            BackMain()\r\n            super.onBackPressed()\r\n        }\r\n    }\r\n\r\n    fun ZoomImg() {\r\n        binding.imageView.controller.settings.apply {\r\n            setMaxZoom(5f)\r\n            setMinZoom(0.01f)\r\n            setPanEnabled(true)\r\n            setDoubleTapEnabled(false)\r\n            setZoomEnabled(true)\r\n            setRotationEnabled(true)\r\n            setOverzoomFactor(1000f)\r\n            setFillViewport(false);\r\n            setOverscrollDistance(this@ArCameraActivity, 1000f, 1000f)\r\n        }\r\n    }\r\n\r\n    private fun BackMain(){\r\n        val intent = Intent(this@ArCameraActivity, MainActivity::class.java)\r\n        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n        startActivity(intent)\r\n        finish()\r\n\r\n    }\r\n    override fun dataObservable() {}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArCameraActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArCameraActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArCameraActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/ar/ArCameraActivity.kt	(date 1733212782216)
@@ -24,10 +24,16 @@
 import androidx.camera.video.VideoCapture
 import androidx.camera.video.VideoRecordEvent
 import androidx.core.content.ContextCompat
+import com.amazic.ads.util.Admob
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.AppOpenManager
+import com.amazic.ads.util.BannerGravity
 import com.ardrawing.sketch.anime.drawing.R
+import com.ardrawing.sketch.anime.drawing.ads.InterAdHelper
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityArCameraBinding
 import com.ardrawing.sketch.anime.drawing.dialog.DialogSaveVideo
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.ui.main.MainActivity
 import com.ardrawing.sketch.anime.drawing.utils.CameraUtils
 import com.ardrawing.sketch.anime.drawing.widget.tap
@@ -55,6 +61,21 @@
     }
 
     override fun initView() {
+        if (SharePrefRemote.get_config(
+                this,
+                SharePrefRemote.banner_draw
+            ) && AdsConsentManager.getConsentResult(this)
+        ) {
+            Admob.getInstance().loadCollapsibleBanner(
+                this,
+                getString(R.string.banner_draw),
+                BannerGravity.bottom
+            )
+            binding.include.visibility = View.VISIBLE
+        } else {
+            binding.include.visibility = View.GONE
+        }
+
         if (!OpenCVLoader.initDebug()) {
             Toast.makeText(this, "Không thể tải OpenCV", Toast.LENGTH_SHORT).show()
             return
@@ -369,11 +390,20 @@
     }
 
     private fun BackMain(){
-        val intent = Intent(this@ArCameraActivity, MainActivity::class.java)
-        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
-        startActivity(intent)
-        finish()
-
+        showLoading()
+        InterAdHelper.showInterAd(
+            this, SharePrefRemote.get_config(
+                this,
+                SharePrefRemote.inter_draw
+            ),
+            getString(R.string.inter_draw)
+        ) {
+            val intent = Intent(this@ArCameraActivity, MainActivity::class.java)
+            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
+            startActivity(intent)
+            finish()
+            hideLoading()
+        }
     }
     override fun dataObservable() {}
 }
Index: app/src/main/res/xml/file_paths.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/file_paths.xml b/app/src/main/res/xml/file_paths.xml
new file mode 100644
--- /dev/null	(date 1727852814537)
+++ b/app/src/main/res/xml/file_paths.xml	(date 1727852814537)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<paths xmlns:android="http://schemas.android.com/apk/res/android">
+    <external-files-path
+        name="external_files"
+        path="Pictures/" />
+    <cache-path
+        name="cache_files"
+        path="a" />
+</paths>
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/InterAdHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/InterAdHelper.java b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/InterAdHelper.java
new file mode 100644
--- /dev/null	(date 1733199636627)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ads/InterAdHelper.java	(date 1733199636627)
@@ -0,0 +1,63 @@
+
+package com.ardrawing.sketch.anime.drawing.ads;
+
+import android.content.Context;
+
+import com.amazic.ads.callback.InterCallback;
+import com.amazic.ads.util.Admob;
+import com.amazic.ads.util.AdsConsentManager;
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote;
+import com.google.android.gms.ads.AdError;
+import com.google.android.gms.ads.LoadAdError;
+import com.google.android.gms.ads.interstitial.InterstitialAd;
+
+public class InterAdHelper {
+    private static long lastTimeShowed = 0;
+
+
+    public static void showInterAd(Context context, boolean config, String id, Runnable onHandle) {
+        if (config && canShowNextAd(context) && AdsConsentManager.getConsentResult(context)) {
+
+            Admob.getInstance().loadInterAds(
+                    context,
+                    id,
+                    new InterCallback() {
+                        @Override
+                        public void onAdLoadSuccess(InterstitialAd interstitialAd) {
+                            super.onAdLoadSuccess(interstitialAd);
+                            Admob.getInstance().showInterAds(context, interstitialAd, new InterCallback() {
+                                @Override
+                                public void onNextAction() {
+                                    super.onNextAction();
+                                    onHandle.run();
+                                }
+
+                                @Override
+                                public void onAdFailedToShow(AdError adError) {
+                                    super.onAdFailedToShow(adError);
+                                    onHandle.run();
+                                }
+                            });
+                        }
+
+                        @Override
+                        public void onAdFailedToLoad(LoadAdError i) {
+                            super.onAdFailedToLoad(i);
+                            onHandle.run();
+                        }
+                    });
+        } else {
+            onHandle.run();
+        }
+    }
+
+    private static boolean canShowNextAd(Context context) {
+        if ((System.currentTimeMillis() - lastTimeShowed) >= SharePrefRemote.get_config_long(context, SharePrefRemote.interval_between_interstitial) * 1000) {
+            lastTimeShowed = System.currentTimeMillis();
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/Common.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/Common.java b/app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/Common.java
new file mode 100644
--- /dev/null	(date 1733197712949)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/Common.java	(date 1733197712949)
@@ -0,0 +1,45 @@
+package com.ardrawing.sketch.anime.drawing.sharePreferent;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.firebase.remoteconfig.FirebaseRemoteConfig;
+import com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings;
+import com.ardrawing.sketch.anime.drawing.R;
+
+import java.util.Arrays;
+import java.util.List;
+
+public class Common {
+    public static void initRemoteConfig(OnCompleteListener listener) {
+        FirebaseRemoteConfig.getInstance().reset();
+        FirebaseRemoteConfigSettings configSettings = new FirebaseRemoteConfigSettings.Builder()
+                .setMinimumFetchIntervalInSeconds(3600)
+                .build();
+
+        FirebaseRemoteConfig.getInstance().setConfigSettingsAsync(configSettings);
+        FirebaseRemoteConfig.getInstance().setDefaultsAsync(R.xml.remote_config_defaults);
+        FirebaseRemoteConfig.getInstance().fetchAndActivate().addOnCompleteListener(listener);
+    }
+
+    public static boolean getRemoteConfigBoolean(String adUnitId) {
+        FirebaseRemoteConfig mFirebaseRemoteConfig = FirebaseRemoteConfig.getInstance();
+        return mFirebaseRemoteConfig.getBoolean(adUnitId);
+    }
+
+    public static String getRemoteConfigString(String adUnitId) {
+        FirebaseRemoteConfig mFirebaseRemoteConfig = FirebaseRemoteConfig.getInstance();
+        return mFirebaseRemoteConfig.getString(adUnitId);
+    }
+
+    public static Long getRemoteConfigLong(String adUnitId) {
+        FirebaseRemoteConfig mFirebaseRemoteConfig = FirebaseRemoteConfig.getInstance();
+        return mFirebaseRemoteConfig.getLong(adUnitId);
+    }
+
+    public static List<String> getRemoteConfigListString(String adUnitId) {
+        FirebaseRemoteConfig mFirebaseRemoteConfig = FirebaseRemoteConfig.getInstance();
+        String object = mFirebaseRemoteConfig.getString(adUnitId);
+        String[] arStr = object.split(",");
+        return Arrays.asList(arStr);
+    }
+}
+
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/SharePrefRemote.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/SharePrefRemote.java b/app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/SharePrefRemote.java
new file mode 100644
--- /dev/null	(date 1733209137757)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/sharePreferent/SharePrefRemote.java	(date 1733209137757)
@@ -0,0 +1,80 @@
+package com.ardrawing.sketch.anime.drawing.sharePreferent;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+
+import com.amazic.ads.util.AdsConsentManager;
+
+public class SharePrefRemote {
+    public static String ads_visibility = "ads_visibility";
+    public static String inter_splash = "inter_splash";
+    public static String native_language = "native_language";
+    public static String banner_home = "banner_home";
+    public static String native_intro = "native_intro";
+    public static String inter_intro = "inter_intro";
+    public static String appopen_resume = "appopen_resume";
+    public static String inter_home = "inter_home";
+    public static String inter_category = "inter_category";
+    public static String inter_draw = "inter_draw";
+    public static String native_category = "native_category";
+    public static String banner_draw = "banner_draw";
+    public static String native_tutorial = "native_tutorial";
+    public static String interval_between_interstitial = "interval_between_interstitial";
+    public static String native_permission = "native_permission";
+
+    public static boolean get_config(Context context, String name_config) {
+        SharedPreferences pre = context.getSharedPreferences("remote_fill", Context.MODE_PRIVATE);
+        if (name_config.equals("style_screen"))
+            return pre.getBoolean(name_config, false);
+        else
+            return pre.getBoolean(name_config, true) && AdsConsentManager.getConsentResult(context) && haveNetworkConnection(context);
+    }
+
+    public static void set_config(Context context, String name_config, boolean config) {
+        SharedPreferences pre = context.getSharedPreferences("remote_fill", Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = pre.edit();
+        editor.putBoolean(name_config, config);
+        editor.apply();
+    }
+
+
+    public static String get_config_string(Context context, String name_config) {
+        SharedPreferences pre = context.getSharedPreferences("remote_fill", Context.MODE_PRIVATE);
+        return pre.getString(name_config, "");
+    }
+
+    public static void set_config_string(Context context, String name_config, String config) {
+        SharedPreferences pre = context.getSharedPreferences("remote_fill", Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = pre.edit();
+        editor.putString(name_config, config);
+        editor.apply();
+    }
+
+    public static Long get_config_long(Context context, String name_config) {
+        SharedPreferences pre = context.getSharedPreferences("remote_fill", Context.MODE_PRIVATE);
+        return pre.getLong(name_config, 0);
+    }
+
+    public static void set_config_long(Context context, String name_config, Long config) {
+        SharedPreferences pre = context.getSharedPreferences("remote_fill", Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = pre.edit();
+        editor.putLong(name_config, config);
+        editor.apply();
+    }
+
+    public static boolean haveNetworkConnection(Context context) {
+        boolean haveConnectedWifi = false;
+        boolean haveConnectedMobile = false;
+        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo[] netInfo = cm.getAllNetworkInfo();
+        for (NetworkInfo ni : netInfo) {
+            if (ni.getTypeName().equalsIgnoreCase("WIFI"))
+                if (ni.isConnected()) haveConnectedWifi = true;
+            if (ni.getTypeName().equalsIgnoreCase("MOBILE"))
+                if (ni.isConnected()) haveConnectedMobile = true;
+        }
+        return haveConnectedWifi || haveConnectedMobile;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/main/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.main\r\n\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport com.ardrawing.sketch.anime.drawing.R\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityMainBinding\r\n\r\n\r\nclass MainActivity : BaseActivity<ActivityMainBinding>() {\r\n\r\n    override fun setViewBinding(): ActivityMainBinding {\r\n       return ActivityMainBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n        val pagerAdapter = MainViewPageAdapter(supportFragmentManager)\r\n        binding.viewPage.adapter = pagerAdapter\r\n        setColorTab(0)\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.tvHome.setOnClickListener {\r\n            binding.tvTitleHome.visibility= View.VISIBLE\r\n            binding.tvTitle.visibility= View.GONE\r\n            binding.viewPage.currentItem = 0\r\n            setColorTab(0)\r\n        }\r\n        binding.tvFavorite.setOnClickListener {\r\n            binding.tvTitleHome.visibility= View.GONE\r\n            binding.tvTitle.visibility= View.VISIBLE\r\n            binding.tvTitle.setText(R.string.favorite)\r\n            binding.viewPage.currentItem = 1\r\n            setColorTab(1)\r\n        }\r\n        binding.tvSetting.setOnClickListener {\r\n            binding.tvTitleHome.visibility= View.GONE\r\n            binding.tvTitle.visibility= View.VISIBLE\r\n            binding.tvTitle.setText(R.string.setting)\r\n            binding.viewPage.currentItem = 2\r\n            setColorTab(2)\r\n        }\r\n    }\r\n\r\n    override fun dataObservable() {\r\n\r\n    }\r\n    private fun setColorTab(i: Int) {\r\n        when (i) {\r\n            0 -> {\r\n                binding.tvHome.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.ic_home_selected, 0, 0)\r\n                binding.tvHome.setTextColor(getColor(R.color.color_FF6F89))\r\n                binding.tvFavorite.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.ic_heart,0,0)\r\n                binding.tvFavorite.setTextColor(getColor(R.color.color_8F9DAA))\r\n                binding.tvSetting.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.ic_setting,0,0)\r\n                binding.tvSetting.setTextColor(getColor(R.color.color_8F9DAA))\r\n            }\r\n\r\n            1 -> {\r\n                binding.tvHome.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.ic_home, 0, 0)\r\n                binding.tvHome.setTextColor(getColor(R.color.color_8F9DAA))\r\n                binding.tvFavorite.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.ic_heart_selected,0,0)\r\n                binding.tvFavorite.setTextColor(getColor(R.color.color_FF6F89))\r\n                binding.tvSetting.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.ic_setting,0,0)\r\n                binding.tvSetting.setTextColor(getColor(R.color.color_8F9DAA))\r\n            }\r\n            2 -> {\r\n                binding.tvHome.setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.ic_home, 0, 0)\r\n                binding.tvHome.setTextColor(getColor(R.color.color_8F9DAA))\r\n                binding.tvFavorite.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.ic_heart,0,0)\r\n                binding.tvFavorite.setTextColor(getColor(R.color.color_8F9DAA))\r\n                binding.tvSetting.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.ic_setting_selected,0,0)\r\n                binding.tvSetting.setTextColor(getColor(R.color.color_FF6F89))\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/main/MainActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/main/MainActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/main/MainActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/main/MainActivity.kt	(date 1733201871526)
@@ -2,9 +2,13 @@
 
 import android.os.Bundle
 import android.view.View
+import com.amazic.ads.util.Admob
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.BannerGravity
 import com.ardrawing.sketch.anime.drawing.R
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityMainBinding
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 
 
 class MainActivity : BaseActivity<ActivityMainBinding>() {
@@ -14,6 +18,20 @@
     }
 
     override fun initView() {
+        if (SharePrefRemote.get_config(
+                this,
+                SharePrefRemote.banner_home
+            ) && AdsConsentManager.getConsentResult(this)
+        ) {
+            Admob.getInstance().loadCollapsibleBanner(
+                this,
+                getString(R.string.banner_home),
+                BannerGravity.bottom
+            )
+            binding.include.visibility = View.VISIBLE
+        } else {
+            binding.include.visibility = View.GONE
+        }
         val pagerAdapter = MainViewPageAdapter(supportFragmentManager)
         binding.viewPage.adapter = pagerAdapter
         setColorTab(0)
Index: app/src/main/res/xml/remote_config_defaults.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/remote_config_defaults.xml b/app/src/main/res/xml/remote_config_defaults.xml
new file mode 100644
--- /dev/null	(date 1727852814453)
+++ b/app/src/main/res/xml/remote_config_defaults.xml	(date 1727852814453)
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="utf-8"?>
+<defaultsMap>
+    <entry>
+        <key>appopen_resume</key>
+        <value>true</value>
+    </entry>
+    <entry>
+        <key>inter_splash</key>
+        <value>true</value>
+    </entry>
+    <entry>
+        <key>native_language</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>native_intro</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>inter_intro</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>interval_between_interstitial</key>
+        <value>20</value>
+    </entry>
+
+    <entry>
+        <key>ads_visibility</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>banner_home</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>native_colorize_guide</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>native_select_feature</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>banner_success</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>banner_save</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>rewarded_save</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>native_saved_photo</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>native_setting</key>
+        <value>true</value>
+    </entry>
+    <entry>
+        <key>rewarded_credit</key>
+        <value>true</value>
+    </entry>
+
+    <entry>
+        <key>credit_day</key>
+        <value>68</value>
+    </entry>
+
+    <entry>
+        <key>credit_enhance</key>
+        <value>46</value>
+    </entry>
+
+    <entry>
+        <key>credit_colorize</key>
+        <value>23</value>
+    </entry>
+
+    <entry>
+        <key>credit_bg</key>
+        <value>23</value>
+    </entry>
+</defaultsMap>
\ No newline at end of file
Index: app/src/main/res/values-de/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"header_warning_permission\">Warnung Berechtigung</string>\r\n    <string name=\"desc_warning_permission_dialog\">Sie müssen alle Berechtigungen zulassen, um diese App mit allen Funktionen zu verwenden.</string>\r\n    <string name=\"go_to_setting\">Zu den Einstellungen</string>\r\n\r\n    <string name=\"this_action_may_contain_advertising\">Diese Aktion kann Werbung enthalten</string>\r\n    <string name=\"language\">Sprache</string>\r\n    <string name=\"next\">Weiter</string>\r\n    <string name=\"this_is_item_sample\">Dies ist ein Beispielartikel!</string>\r\n    <string name=\"content_intro1\">ZEICHNEN &amp; SKIZZIEREN LEICHT.</string>\r\n    <string name=\"content_intro2\">VIELFÄLTIGE ZEICHNUNGEN.</string>\r\n    <string name=\"content_intro3\">FOTO ZU SKIZZE.</string>\r\n    <string name=\"permission\">Berechtigung</string>\r\n    <string name=\"need_access_to_camera_microphone\">Zugriff auf Kamera &amp;\\n Mikrofon erforderlich</string>\r\n    <string name=\"please_turn_on_access_your_camera_and_microphone\">Bitte aktivieren Sie den Zugriff auf Ihre Kamera und Ihr Mikrofon</string>\r\n    <string name=\"continuee\">Weiter</string>\r\n    <string name=\"empty\">Leer</string>\r\n    <string name=\"ar_sketch\">AR Skizze</string>\r\n    <string name=\"sketches\">Skizzen</string>\r\n    <string name=\"favorite\">Favoriten</string>\r\n    <string name=\"setting\">Einstellungen</string>\r\n    <string name=\"rate\">Bewerten</string>\r\n    <string name=\"share\">Teilen</string>\r\n    <string name=\"privacy_policy\">Datenschutzrichtlinie</string>\r\n    <string name=\"upload_your_inllustration\">Laden Sie Ihre \\nIllustration hoch</string>\r\n    <string name=\"upload\">Hochladen</string>\r\n    <string name=\"finish\">Fertig</string>\r\n    <string name=\"photo\">Foto</string>\r\n    <string name=\"flip\">Drehen</string>\r\n    <string name=\"flash\">Blitz</string>\r\n    <string name=\"video_saved\">Video gespeichert</string>\r\n    <string name=\"photo_saved\">Foto gespeichert</string>\r\n    <string name=\"do_you_want_to_save_the_video\">Möchten Sie das Video speichern?</string>\r\n    <string name=\"no\">Nein</string>\r\n    <string name=\"yes\">Ja</string>\r\n    <string name=\"cartoons\">Cartoons</string>\r\n    <string name=\"cars\">Autos</string>\r\n    <string name=\"animals\">Tiere</string>\r\n    <string name=\"anime\">Anime</string>\r\n    <string name=\"for_kids\">Für Kinder</string>\r\n    <string name=\"flowers\">Blumen</string>\r\n    <string name=\"chibis\">Chibis</string>\r\n    <string name=\"people\">Menschen</string>\r\n    <string name=\"tutorial\">Tutorial</string>\r\n    <string name=\"put_your_device_on_any_cup_mug_or_any_object_to_hold_it\">Stellen Sie Ihr Gerät auf eine Tasse, ein Becher oder ein anderes Objekt, um es zu halten</string>\r\n    <string name=\"go_it\">Verstanden</string>\r\n    <string name=\"don_t_show_again\">Nicht wieder anzeigen</string>\r\n    <string name=\"please_send_us\">Bitte senden Sie uns Ihr Feedback!</string>\r\n    <string name=\"send\">Senden</string>\r\n    <string name=\"cancel\">Abbrechen</string>\r\n    <string name=\"Your_opinion_matter_to_us\">Gefällt Ihnen die App?</string>\r\n    <string name=\"we_d_greatly_appreciate_if_you_can_rate_us\">Lassen Sie uns Ihre Erfahrung wissen \\n5 Sterne sind am besten im Google Play Store!</string>\r\n    <string name=\"may_be_later\">Nicht jetzt</string>\r\n    <string name=\"write_some_feedback\">Schreiben Sie ein Feedback</string>\r\n    <string name=\"please_give_rating\">Bitte geben Sie uns eine Bewertung!</string>\r\n    <string name=\"There_is_no_email\">Es ist kein E-Mail-Client installiert.</string>\r\n    <string name=\"thank_u\">Danke!</string>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
--- a/app/src/main/res/values-de/strings.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/values-de/strings.xml	(date 1732850206833)
@@ -16,7 +16,6 @@
     <string name="please_turn_on_access_your_camera_and_microphone">Bitte aktivieren Sie den Zugriff auf Ihre Kamera und Ihr Mikrofon</string>
     <string name="continuee">Weiter</string>
     <string name="empty">Leer</string>
-    <string name="ar_sketch">AR Skizze</string>
     <string name="sketches">Skizzen</string>
     <string name="favorite">Favoriten</string>
     <string name="setting">Einstellungen</string>
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pluginManagement {\r\n    repositories {\r\n        google {\r\n            content {\r\n                includeGroupByRegex(\"com\\\\.android.*\")\r\n                includeGroupByRegex(\"com\\\\.google.*\")\r\n                includeGroupByRegex(\"androidx.*\")\r\n            }\r\n        }\r\n        mavenCentral()\r\n        gradlePluginPortal()\r\n    }\r\n}\r\ndependencyResolutionManagement {\r\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n    }\r\n}\r\n\r\nrootProject.name = \"arr_sketch_v2\"\r\ninclude ':app'\r\ninclude ':sdk'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
--- a/settings.gradle	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/settings.gradle	(date 1733193621416)
@@ -14,8 +14,20 @@
 dependencyResolutionManagement {
     repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
     repositories {
+        maven { url 'https://jitpack.io' }
         google()
         mavenCentral()
+        maven {
+            url "https://maven.google.com" // Google's Maven repository
+        }
+        maven
+                { url 'https://android-sdk.is.com/' }
+        maven {
+            url 'https://artifact.bytedance.com/repository/pangle/'
+        }
+        maven {
+            url 'https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea'
+        }
     }
 }
 
Index: app/src/main/res/layout/ads_native_small_bottom_shimer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/ads_native_small_bottom_shimer.xml b/app/src/main/res/layout/ads_native_small_bottom_shimer.xml
new file mode 100644
--- /dev/null	(date 1733200592152)
+++ b/app/src/main/res/layout/ads_native_small_bottom_shimer.xml	(date 1733200592152)
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.facebook.shimmer.ShimmerFrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:background="@drawable/border_ads"
+    android:id="@+id/shimmer_container_native"
+    android:layout_height="wrap_content">
+
+    <RelativeLayout
+        android:id="@+id/ad_unit_content"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+        <TextView
+            style="@style/AppTheme.AdsNewV2"/>
+
+        <LinearLayout
+            android:layout_marginTop="10dp"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:padding="8dip">
+
+                <ImageView
+                    android:id="@+id/ad_app_icon"
+                    android:layout_width="40dip"
+                    android:layout_height="40dip"
+                    android:adjustViewBounds="true"
+                    android:src="@color/lightTransparent" />
+
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="5dip"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/ad_headline"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:ellipsize="end"
+                        android:maxLines="2"
+                        android:background="@color/lightTransparent"
+                        android:textColor="@android:color/white"
+                        android:textSize="14sp" />
+
+                    <LinearLayout
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal">
+
+                        <TextView
+                            android:id="@+id/ad_advertiser"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:gravity="bottom"
+                            android:lines="1"
+                            android:background="@color/lightTransparent"
+                            android:textColor="@android:color/white"
+                            android:textSize="12sp"
+                            android:textStyle="bold" />
+                    </LinearLayout>
+                    <TextView
+                        android:id="@+id/ad_body"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_marginLeft="10dip"
+                        android:layout_marginRight="10dip"
+                        android:maxLines="3"
+                        android:layout_marginBottom="8dp"
+                        android:background="@color/lightTransparent"
+                        android:textSize="12sp" />
+                </LinearLayout>
+            </LinearLayout>
+
+
+
+            <androidx.appcompat.widget.AppCompatButton
+                android:id="@+id/ad_call_to_action"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginVertical="10dp"
+                android:layout_marginHorizontal="20dp"
+                android:background="@drawable/bg_item_language_active"
+                android:gravity="center"
+                android:textColor="@color/colorWhite"
+                android:textSize="22sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+
+    </RelativeLayout>
+</com.facebook.shimmer.ShimmerFrameLayout>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    id 'kotlin-kapt'\r\n    id 'com.google.gms.google-services'\r\n    id 'com.google.firebase.crashlytics'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.ardrawing.sketch.anime.drawing'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.ardrawing.sketch.anime.drawing\"\r\n        minSdk 24\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary true\r\n        }\r\n        def formattedDate = new Date().format('MM.dd.yyyy')\r\n        archivesBaseName = \"Ardrawing_${versionName}_${versionCode}_${formattedDate}\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_17\r\n        targetCompatibility JavaVersion.VERSION_17\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '17'\r\n    }\r\n    buildFeatures {\r\n        compose true\r\n        viewBinding true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion '1.5.1'\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += '/META-INF/{AL2.0,LGPL2.1}'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(project(\":sdk\"))\r\n    implementation libs.androidx.core.ktx\r\n    implementation libs.androidx.lifecycle.runtime.ktx\r\n    implementation libs.androidx.activity.compose\r\n    implementation platform(libs.androidx.compose.bom)\r\n    implementation libs.androidx.ui\r\n    implementation libs.androidx.ui.graphics\r\n    implementation libs.androidx.ui.tooling.preview\r\n    implementation libs.androidx.material3\r\n    implementation libs.androidx.appcompat\r\n    implementation libs.androidx.constraintlayout\r\n    implementation libs.androidx.recyclerview\r\n    implementation libs.androidx.cardview\r\n    implementation libs.androidx.viewpager2\r\n    implementation libs.androidx.camera.video\r\n    implementation libs.play.services.tasks\r\n    implementation libs.review.ktx\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.androidx.junit\r\n    androidTestImplementation libs.androidx.espresso.core\r\n    androidTestImplementation platform(libs.androidx.compose.bom)\r\n    androidTestImplementation libs.androidx.ui.test.junit4\r\n    debugImplementation libs.androidx.ui.tooling\r\n    debugImplementation libs.androidx.ui.test.manifest\r\n////\r\n    implementation 'com.google.android.material:material:1.12.0'\r\n    ////\r\n    // CameraX dependencies\r\n    def camerax_version = \"1.1.0\"\r\n    implementation \"androidx.camera:camera-camera2:$camerax_version\"\r\n    implementation \"androidx.camera:camera-lifecycle:$camerax_version\"\r\n    implementation \"androidx.camera:camera-view:$camerax_version\"\r\n/////\r\n    implementation \"androidx.room:room-runtime:2.6.0\"\r\n    kapt \"androidx.room:room-compiler:2.6.0\"\r\n    implementation \"androidx.room:room-ktx:2.6.0\"\r\n    ///\r\n    def lifecycle_version = \"2.6.1\"\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version\"\r\n    implementation \"androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycle_version\"\r\n    implementation \"androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version\"\r\n    implementation \"androidx.fragment:fragment-ktx:1.5.0\"\r\n    ///\r\n    implementation platform('com.google.firebase:firebase-bom:30.1.0')\r\n    implementation 'com.google.firebase:firebase-analytics:21.3.0'\r\n    implementation 'com.google.firebase:firebase-messaging:23.2.1'\r\n    implementation 'com.google.firebase:firebase-crashlytics:18.4.1'\r\n    implementation 'com.google.firebase:firebase-config:21.4.1'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-crashlytics'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/build.gradle	(date 1733194488355)
@@ -89,7 +89,7 @@
     implementation "androidx.room:room-runtime:2.6.0"
     kapt "androidx.room:room-compiler:2.6.0"
     implementation "androidx.room:room-ktx:2.6.0"
-    ///
+    ///`
     def lifecycle_version = "2.6.1"
     implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
     implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycle_version"
@@ -103,4 +103,23 @@
     implementation 'com.google.firebase:firebase-config:21.4.1'
     implementation 'com.google.firebase:firebase-analytics'
     implementation 'com.google.firebase:firebase-crashlytics'
+
+
+    ////ads
+    implementation 'com.google.android.gms:play-services-ads:22.1.0'
+    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
+    implementation 'com.github.quangchienictu:AmazicAdsLibrary:2.7.2'
+
+    implementation 'com.google.guava:guava:30.1.1-android'
+
+    implementation 'com.google.ads.mediation:facebook:6.16.0.0'
+    implementation 'com.google.ads.mediation:vungle:7.3.2.0'
+    implementation 'com.google.ads.mediation:applovin:11.11.3.0'
+    implementation 'com.google.ads.mediation:pangle:5.4.1.1.0'
+    implementation 'com.google.ads.mediation:ironsource:7.5.1.0'
+    implementation 'com.unity3d.ads:unity-ads:4.8.0'
+    implementation 'com.google.ads.mediation:unity:4.8.0.0'
+    implementation 'com.google.ads.mediation:mintegral:16.5.21.0'
+    implementation 'com.facebook.android:facebook-android-sdk:16.0.1'
+    implementation 'com.facebook.shimmer:shimmer:0.5.0'
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_tutorial.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/color_app\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout4\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:paddingTop=\"20dp\"\r\n        android:paddingBottom=\"5dp\"\r\n        android:gravity=\"center\"\r\n        android:background=\"@drawable/bg_boder_header\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/btn_back\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"10dp\"\r\n            android:src=\"@drawable/icon_back\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/txt_title\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginEnd=\"30dp\"\r\n            android:layout_weight=\"1\"\r\n            android:padding=\"10dp\"\r\n            android:fontFamily=\"@font/lato_bold\"\r\n            android:gravity=\"center|center_vertical\"\r\n            android:text=\"@string/tutorial\"\r\n            android:textColor=\"@color/color_FF6F89\"\r\n            android:textSize=\"20sp\" />\r\n    </LinearLayout>\r\n\r\n    <VideoView\r\n        android:id=\"@+id/view2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"360dp\"\r\n        android:layout_marginTop=\"60dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout4\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView4\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginHorizontal=\"13dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:fontFamily=\"@font/onest_regular\"\r\n        android:gravity=\"center\"\r\n        android:text=\"@string/put_your_device_on_any_cup_mug_or_any_object_to_hold_it\"\r\n        android:textColor=\"@color/color_2E3338\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.64\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/view2\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_goit\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"36dp\"\r\n        android:background=\"@drawable/bg_button_tutorial\"\r\n        android:drawablePadding=\"8dp\"\r\n        android:fontFamily=\"@font/onest_bold\"\r\n        android:gravity=\"center\"\r\n        android:paddingHorizontal=\"120dp\"\r\n        android:text=\"@string/go_it\"\r\n        android:textColor=\"#EEF1F6\"\r\n        android:textSize=\"16sp\"\r\n        app:drawableStartCompat=\"@drawable/icon_check\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.489\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView4\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_dont\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:drawablePadding=\"10dp\"\r\n        android:fontFamily=\"@font/onest_medium\"\r\n        android:text=\"@string/don_t_show_again\"\r\n        android:textColor=\"@color/color_2E3338\"\r\n        android:textSize=\"14sp\"\r\n        android:padding=\"5dp\"\r\n        android:gravity=\"center\"\r\n        app:drawableStartCompat=\"@drawable/icon_check_tutorial\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tv_goit\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_tutorial.xml b/app/src/main/res/layout/activity_tutorial.xml
--- a/app/src/main/res/layout/activity_tutorial.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_tutorial.xml	(date 1733209574290)
@@ -94,16 +94,29 @@
         android:layout_marginTop="20dp"
         android:drawablePadding="10dp"
         android:fontFamily="@font/onest_medium"
+        android:gravity="center"
+        android:padding="5dp"
         android:text="@string/don_t_show_again"
         android:textColor="@color/color_2E3338"
         android:textSize="14sp"
-        android:padding="5dp"
-        android:gravity="center"
         app:drawableStartCompat="@drawable/icon_check_tutorial"
+        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.498"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/tv_goit"
+        app:layout_constraintVertical_bias="0.0"
         tools:ignore="MissingConstraints" />
 
+    <FrameLayout
+        android:id="@+id/fr_ads"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent">
+
+    </FrameLayout>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/intro/IntroActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.intro\r\n\r\nimport android.content.pm.PackageManager\r\nimport android.view.LayoutInflater\r\nimport android.widget.ImageView\r\nimport android.widget.LinearLayout\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport com.ardrawing.sketch.anime.drawing.R\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityIntroBinding\r\nimport com.ardrawing.sketch.anime.drawing.model.IntroModel\r\nimport com.ardrawing.sketch.anime.drawing.ui.main.MainActivity\r\nimport com.ardrawing.sketch.anime.drawing.ui.permisson.PermissonActivity\r\n\r\nclass IntroActivity : BaseActivity<ActivityIntroBinding>() {\r\n\r\n    var isFirst = true\r\n    private lateinit var dots: Array<ImageView?>\r\n    private lateinit var viewPagerAdapter: ViewPagerAdapter\r\n    private val myPageChangeCallback: ViewPager2.OnPageChangeCallback =\r\n        object : ViewPager2.OnPageChangeCallback() {\r\n            override fun onPageSelected(position: Int) {\r\n                if (isFirst) {\r\n                    isFirst = false\r\n                    return\r\n                }\r\n                addBottomDots(position)\r\n            }\r\n        }\r\n    private val CAMERA_AND_MICROPHONE_PERMISSIONS = arrayOf(\r\n        android.Manifest.permission.CAMERA,\r\n        android.Manifest.permission.RECORD_AUDIO,\r\n    )\r\n    private val countPageIntro = 3\r\n\r\n    override fun setViewBinding(): ActivityIntroBinding {\r\n        return ActivityIntroBinding.inflate(LayoutInflater.from(this))\r\n    }\r\n\r\n    override fun initView() {\r\n        val data = mutableListOf(\r\n            IntroModel(\r\n                R.drawable.img_intro1,\r\n                R.string.content_intro1,\r\n            ),\r\n            IntroModel(\r\n                R.drawable.img_intro2,\r\n                R.string.content_intro2,\r\n                ),\r\n            IntroModel(\r\n                R.drawable.img_intro3,\r\n                R.string.content_intro3,\r\n            )\r\n        )\r\n        viewPagerAdapter = ViewPagerAdapter(this, data)\r\n        binding.viewPager2.apply {\r\n            adapter = viewPagerAdapter\r\n            registerOnPageChangeCallback(myPageChangeCallback)\r\n        }\r\n        addBottomDots(0)\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.btnNextTutorial.setOnClickListener {\r\n            if (binding.viewPager2.currentItem == countPageIntro - 1) {\r\n                it.isEnabled = false\r\n                startNextScreen()\r\n            } else\r\n                binding.viewPager2.currentItem = binding.viewPager2.currentItem + 1\r\n        }\r\n    }\r\n\r\n    private fun startNextScreen() {\r\n        if (checkPermissions())\r\n            showActivity(MainActivity::class.java)\r\n        else\r\n            showActivity(PermissonActivity::class.java)\r\n        finishAffinity()\r\n    }\r\n    private fun checkPermissions(): Boolean {\r\n        return CAMERA_AND_MICROPHONE_PERMISSIONS.all { permission ->\r\n            checkSelfPermission(permission) == PackageManager.PERMISSION_GRANTED\r\n        }\r\n    }\r\n    override fun dataObservable() {\r\n        addBottomDots(0)\r\n    }\r\n\r\n\r\n    private fun addBottomDots(currentPage: Int) {\r\n        binding.linearDots.removeAllViews()\r\n        dots = arrayOfNulls(countPageIntro)\r\n        for (i in 0 until countPageIntro) {\r\n            dots[i] = ImageView(this)\r\n            if (i == currentPage)\r\n                dots[i]!!.setImageResource(R.drawable.ic_intro_selected)\r\n            else\r\n                dots[i]!!.setImageResource(R.drawable.ic_intro_no_select)\r\n            val params = LinearLayout.LayoutParams(\r\n                LinearLayout.LayoutParams.WRAP_CONTENT,\r\n                LinearLayout.LayoutParams.WRAP_CONTENT\r\n            )\r\n            params.setMargins(8, 0, 8, 0)\r\n            binding.linearDots.addView(dots[i], params)\r\n        }\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        super.onBackPressed()\r\n        finishAffinity()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/intro/IntroActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/intro/IntroActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/intro/IntroActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/intro/IntroActivity.kt	(date 1733200770857)
@@ -1,16 +1,26 @@
 package com.ardrawing.sketch.anime.drawing.ui.intro
 
 import android.content.pm.PackageManager
+import android.os.Bundle
 import android.view.LayoutInflater
+import android.view.View
 import android.widget.ImageView
 import android.widget.LinearLayout
 import androidx.viewpager2.widget.ViewPager2
+import com.amazic.ads.event.AdmobEvent
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.manager.native_ad.NativeBuilder
+import com.amazic.ads.util.manager.native_ad.NativeManager
 import com.ardrawing.sketch.anime.drawing.R
+import com.ardrawing.sketch.anime.drawing.ads.InterAdHelper
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityIntroBinding
 import com.ardrawing.sketch.anime.drawing.model.IntroModel
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.ui.main.MainActivity
 import com.ardrawing.sketch.anime.drawing.ui.permisson.PermissonActivity
+import com.ardrawing.sketch.anime.drawing.widget.gone
+import com.ardrawing.sketch.anime.drawing.widget.visible
 
 class IntroActivity : BaseActivity<ActivityIntroBinding>() {
 
@@ -25,6 +35,28 @@
                     return
                 }
                 addBottomDots(position)
+                when (position) {
+                    0 -> {
+                        binding.frAds.visible()
+                        AdmobEvent.logEvent(this@IntroActivity, "intro1_view", Bundle())
+
+                    }
+
+                    1 -> {
+                        binding.frAds.gone()
+                        AdmobEvent.logEvent(this@IntroActivity, "intro2_view", Bundle())
+                    }
+
+                    2 -> {
+                        binding.frAds.visible()
+                        AdmobEvent.logEvent(this@IntroActivity, "intro2_view", Bundle())
+                    }
+
+                    else -> {
+                        binding.frAds.gone()
+                        AdmobEvent.logEvent(this@IntroActivity, "intro3_view", Bundle())
+                    }
+                }
             }
         }
     private val CAMERA_AND_MICROPHONE_PERMISSIONS = arrayOf(
@@ -38,6 +70,7 @@
     }
 
     override fun initView() {
+        loadNative()
         val data = mutableListOf(
             IntroModel(
                 R.drawable.img_intro1,
@@ -46,7 +79,7 @@
             IntroModel(
                 R.drawable.img_intro2,
                 R.string.content_intro2,
-                ),
+            ),
             IntroModel(
                 R.drawable.img_intro3,
                 R.string.content_intro3,
@@ -71,17 +104,29 @@
     }
 
     private fun startNextScreen() {
-        if (checkPermissions())
-            showActivity(MainActivity::class.java)
-        else
-            showActivity(PermissonActivity::class.java)
-        finishAffinity()
+        showLoading()
+        InterAdHelper.showInterAd(
+            this@IntroActivity, SharePrefRemote.get_config(
+                this@IntroActivity,
+                SharePrefRemote.inter_intro
+            ),
+            getString(R.string.inter_intro)
+        ) {
+            if (checkPermissions())
+                showActivity(MainActivity::class.java)
+            else
+                showActivity(PermissonActivity::class.java)
+            finishAffinity()
+            hideLoading()
+        }
     }
+
     private fun checkPermissions(): Boolean {
         return CAMERA_AND_MICROPHONE_PERMISSIONS.all { permission ->
             checkSelfPermission(permission) == PackageManager.PERMISSION_GRANTED
         }
     }
+
     override fun dataObservable() {
         addBottomDots(0)
     }
@@ -109,4 +154,28 @@
         super.onBackPressed()
         finishAffinity()
     }
+    private fun loadNative() {
+        try {
+            if (SharePrefRemote.get_config(this, SharePrefRemote.native_intro) &&
+                AdsConsentManager.getConsentResult(this)
+            ) {
+                binding.frAds.visibility = View.VISIBLE
+                val nativeBuilder = NativeBuilder(
+                    this,
+                    binding.frAds,
+                    R.layout.ads_native_small_bottom_shimer,
+                    R.layout.layout_native_small_bottom
+                )
+                nativeBuilder.setListIdAd(listOf(getString(R.string.native_intro)))
+                val nativeManager = NativeManager(this, this, nativeBuilder)
+            } else {
+                binding.frAds.visibility = View.GONE
+                binding.frAds.removeAllViews()
+            }
+        } catch (exception: Exception) {
+            exception.printStackTrace()
+            binding.frAds.visibility = View.GONE
+            binding.frAds.removeAllViews()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_ar_camera.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar_loadding\"\r\n        style=\"?android:attr/progressBarStyleLarge\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.5\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/frameLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/linearLayout5\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.camera.view.PreviewView\r\n            android:id=\"@+id/previewView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"/>\r\n\r\n        <com.ardrawing.sketch.anime.drawing.zoomimg.views.GestureImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"fitCenter\" />\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@drawable/bg_camera_top\"\r\n            android:orientation=\"vertical\"\r\n            android:paddingVertical=\"20dp\"\r\n             >\r\n\r\n            <ImageView\r\n                android:id=\"@+id/btn_clock\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"36dp\"\r\n                android:src=\"@drawable/ic_un_clock\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintVertical_bias=\"0.483\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_finish\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/bg_finish\"\r\n                android:fontFamily=\"@font/onest_bold\"\r\n                android:gravity=\"center\"\r\n                android:text=\"@string/finish\"\r\n                android:alpha=\"1\"\r\n                android:textColor=\"#EEF1F6\"\r\n                android:textSize=\"16sp\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintHorizontal_bias=\"0.934\"\r\n                app:layout_constraintStart_toEndOf=\"@+id/btn_clock\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintVertical_bias=\"0.0\" />\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/progressBar\"\r\n            style=\"?android:attr/progressBarStyleLarge\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:visibility=\"gone\" />\r\n    </FrameLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_time_recod\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:background=\"@drawable/bg_time_red\"\r\n        android:fontFamily=\"@font/onest_semibold\"\r\n        android:gravity=\"center\"\r\n        android:paddingHorizontal=\"10dp\"\r\n        android:paddingVertical=\"10dp\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"14sp\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        tools:text=\"sss\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_save\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:background=\"@drawable/bg_save\"\r\n        android:fontFamily=\"@font/onest_semibold\"\r\n        android:gravity=\"center\"\r\n        android:paddingHorizontal=\"10dp\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"14sp\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        tools:text=\"save\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/linearLayout5\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:paddingHorizontal=\"10dp\"\r\n        android:paddingVertical=\"25dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n        <SeekBar\r\n            android:id=\"@+id/seekBar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:maxWidth=\"6dp\"\r\n            android:maxHeight=\"6dp\"\r\n            android:minWidth=\"2dp\"\r\n            android:minHeight=\"2dp\"\r\n            android:progressDrawable=\"@drawable/custom_seekbar_progress\"\r\n            android:progressTint=\"#FF6F89\"\r\n            android:thumb=\"@drawable/ic_thumb_seekbar\"\r\n            android:thumbOffset=\"0dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"1.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/btn_recod\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:src=\"@drawable/ic_recod_stop\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/seekBar\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:background=\"@drawable/bg_item_camera_ar\"\r\n            android:gravity=\"center\"\r\n            android:paddingHorizontal=\"14dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.927\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/btn_recod\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/seekBar\"\r\n            app:layout_constraintVertical_bias=\"0.0\"\r\n            tools:ignore=\"MissingConstraints\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_photo\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:fontFamily=\"@font/onest_medium\"\r\n                android:gravity=\"center\"\r\n                android:drawablePadding=\"5dp\"\r\n                android:text=\"@string/photo\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"14sp\"\r\n                app:drawableTopCompat=\"@drawable/ic_camera\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_flip\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:fontFamily=\"@font/onest_medium\"\r\n                android:gravity=\"center\"\r\n                android:drawablePadding=\"5dp\"\r\n                android:text=\"@string/flip\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"14sp\"\r\n                app:drawableTopCompat=\"@drawable/ic_flip\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_flash\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:fontFamily=\"@font/onest_medium\"\r\n                android:gravity=\"center\"\r\n                android:drawablePadding=\"5dp\"\r\n                android:text=\"@string/flash\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"14sp\"\r\n                app:drawableTopCompat=\"@drawable/ic_flash\" />\r\n        </LinearLayout>\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_ar_camera.xml b/app/src/main/res/layout/activity_ar_camera.xml
--- a/app/src/main/res/layout/activity_ar_camera.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_ar_camera.xml	(date 1733213749280)
@@ -32,7 +32,7 @@
         <androidx.camera.view.PreviewView
             android:id="@+id/previewView"
             android:layout_width="match_parent"
-            android:layout_height="match_parent"/>
+            android:layout_height="match_parent" />
 
         <com.ardrawing.sketch.anime.drawing.zoomimg.views.GestureImageView
             android:id="@+id/imageView"
@@ -45,8 +45,7 @@
             android:layout_height="wrap_content"
             android:background="@drawable/bg_camera_top"
             android:orientation="vertical"
-            android:paddingVertical="20dp"
-             >
+            android:paddingVertical="20dp">
 
             <ImageView
                 android:id="@+id/btn_clock"
@@ -63,11 +62,11 @@
                 android:id="@+id/tv_finish"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
+                android:alpha="1"
                 android:background="@drawable/bg_finish"
                 android:fontFamily="@font/onest_bold"
                 android:gravity="center"
                 android:text="@string/finish"
-                android:alpha="1"
                 android:textColor="#EEF1F6"
                 android:textSize="16sp"
                 app:layout_constraintBottom_toBottomOf="parent"
@@ -131,9 +130,8 @@
         android:orientation="horizontal"
         android:paddingHorizontal="10dp"
         android:paddingVertical="25dp"
-        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/line"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent">
 
         <SeekBar
@@ -184,9 +182,9 @@
                 android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
+                android:drawablePadding="5dp"
                 android:fontFamily="@font/onest_medium"
                 android:gravity="center"
-                android:drawablePadding="5dp"
                 android:text="@string/photo"
                 android:textColor="@color/white"
                 android:textSize="14sp"
@@ -197,9 +195,9 @@
                 android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
+                android:drawablePadding="5dp"
                 android:fontFamily="@font/onest_medium"
                 android:gravity="center"
-                android:drawablePadding="5dp"
                 android:text="@string/flip"
                 android:textColor="@color/white"
                 android:textSize="14sp"
@@ -210,13 +208,32 @@
                 android:layout_width="0dp"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
+                android:drawablePadding="5dp"
                 android:fontFamily="@font/onest_medium"
                 android:gravity="center"
-                android:drawablePadding="5dp"
                 android:text="@string/flash"
                 android:textColor="@color/white"
                 android:textSize="14sp"
                 app:drawableTopCompat="@drawable/ic_flash" />
         </LinearLayout>
+
     </androidx.constraintlayout.widget.ConstraintLayout>
+    <View
+        android:id="@+id/line"
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="#808080"
+        app:layout_constraintBottom_toTopOf="@+id/include"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent" />
+
+    <include
+        android:id="@+id/include"
+        layout="@layout/layout_banner"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/detail/DetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.detail\r\n\r\nimport android.content.Intent\r\nimport android.util.Log\r\nimport androidx.activity.viewModels\r\nimport androidx.lifecycle.lifecycleScope\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.database.AppDatabase\r\n\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityDetailBinding\r\nimport com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefUtilsKotlin\r\nimport com.ardrawing.sketch.anime.drawing.ui.ar.ArCameraActivity\r\nimport com.ardrawing.sketch.anime.drawing.ui.home.listHome\r\nimport com.ardrawing.sketch.anime.drawing.ui.tutorial.TutorialActivity\r\n\r\nclass DetailActivity : BaseActivity<ActivityDetailBinding>() {\r\n    private lateinit var homedetailadapter: DetailAdapter\r\n\r\n\r\n    override fun setViewBinding(): ActivityDetailBinding {\r\n        return ActivityDetailBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n        val homeId = intent.getIntExtra(\"HOME_ID\", -1)\r\n//        Toast.makeText(this, \"ID detail: $homeId\", Toast.LENGTH_SHORT).show()\r\n        val selectedHomeModel = listHome.find { it.id == homeId }\r\n        val detailList = selectedHomeModel?.list ?: emptyList()\r\n        binding.txtTitle.setText(selectedHomeModel!!.title)\r\n        homedetailadapter = DetailAdapter(detailList, lifecycleScope) { img ->\r\n            if (SharePrefUtilsKotlin.isTutorial(this)) {\r\n                Log.d(\"imgDraw\", \"imgDraw detail: $img\")\r\n                val intent = Intent(this, TutorialActivity::class.java).apply {\r\n                    putExtra(\"Img_Draw\", img)\r\n                }\r\n                startActivity(intent)\r\n            } else {\r\n                Log.d(\"imgDraw\", \"imgDraw detail2: $img\")\r\n                val intent = Intent(this, ArCameraActivity::class.java).apply {\r\n                    putExtra(\"Img_Draw\", img)\r\n                }\r\n                startActivity(intent)\r\n            }\r\n\r\n        }\r\n\r\n        binding.rcvView.layoutManager = GridLayoutManager(this, 2)\r\n        binding.rcvView.adapter = homedetailadapter\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.btnBack.setOnClickListener {\r\n            finish()\r\n        }\r\n    }\r\n\r\n    override fun dataObservable() {}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/detail/DetailActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/detail/DetailActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/detail/DetailActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/detail/DetailActivity.kt	(date 1733210103524)
@@ -2,13 +2,20 @@
 
 import android.content.Intent
 import android.util.Log
+import android.view.View
 import androidx.activity.viewModels
 import androidx.lifecycle.lifecycleScope
 import androidx.recyclerview.widget.GridLayoutManager
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.manager.native_ad.NativeBuilder
+import com.amazic.ads.util.manager.native_ad.NativeManager
+import com.ardrawing.sketch.anime.drawing.R
+import com.ardrawing.sketch.anime.drawing.ads.InterAdHelper
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.database.AppDatabase
 
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityDetailBinding
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefUtilsKotlin
 import com.ardrawing.sketch.anime.drawing.ui.ar.ArCameraActivity
 import com.ardrawing.sketch.anime.drawing.ui.home.listHome
@@ -23,6 +30,7 @@
     }
 
     override fun initView() {
+        loadNative()
         val homeId = intent.getIntExtra("HOME_ID", -1)
 //        Toast.makeText(this, "ID detail: $homeId", Toast.LENGTH_SHORT).show()
         val selectedHomeModel = listHome.find { it.id == homeId }
@@ -37,10 +45,20 @@
                 startActivity(intent)
             } else {
                 Log.d("imgDraw", "imgDraw detail2: $img")
-                val intent = Intent(this, ArCameraActivity::class.java).apply {
-                    putExtra("Img_Draw", img)
-                }
-                startActivity(intent)
+                showLoading()
+                InterAdHelper.showInterAd(
+                    this, SharePrefRemote.get_config(
+                        this,
+                        SharePrefRemote.inter_category
+                    ),
+                    getString(R.string.inter_category)
+                ) {
+                    val intent = Intent(this, ArCameraActivity::class.java).apply {
+                        putExtra("Img_Draw", img)
+                    }
+                    startActivity(intent)
+                    hideLoading()
+                }
             }
 
         }
@@ -56,4 +74,28 @@
     }
 
     override fun dataObservable() {}
+    private fun loadNative() {
+        try {
+            if (SharePrefRemote.get_config(this, SharePrefRemote.native_category) &&
+                AdsConsentManager.getConsentResult(this)
+            ) {
+                binding.frAds.visibility = View.VISIBLE
+                val nativeBuilder = NativeBuilder(
+                    this,
+                    binding.frAds,
+                    R.layout.ads_native_small_bottom_shimer,
+                    R.layout.layout_native_small_bottom
+                )
+                nativeBuilder.setListIdAd(listOf(getString(R.string.native_category)))
+                val nativeManager = NativeManager(this, this, nativeBuilder)
+            } else {
+                binding.frAds.visibility = View.GONE
+                binding.frAds.removeAllViews()
+            }
+        } catch (exception: Exception) {
+            exception.printStackTrace()
+            binding.frAds.visibility = View.GONE
+            binding.frAds.removeAllViews()
+        }
+    }
 }
Index: app/src/main/res/layout/activity_language_start.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:background=\"@color/color_app\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/rl_language\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/color_app\"\r\n        android:orientation=\"vertical\"\r\n        android:paddingTop=\"25dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.5\">\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/rl_top\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:paddingHorizontal=\"8dp\"\r\n            android:paddingVertical=\"10dp\"\r\n            tools:ignore=\"UseCompoundDrawables\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_language\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginStart=\"30dp\"\r\n                android:layout_weight=\"1\"\r\n                android:fontFamily=\"@font/lato_bold\"\r\n                android:gravity=\"center|center_vertical\"\r\n                android:textAllCaps=\"false\"\r\n                android:text=\"@string/language\"\r\n                android:textColor=\"@color/color_FF6F89\"\r\n                android:textSize=\"23sp\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/iv_done\"\r\n                android:layout_width=\"35dp\"\r\n                android:layout_height=\"35dp\"\r\n                android:layout_gravity=\"end|center_vertical\"\r\n                android:layout_marginEnd=\"5dp\"\r\n                android:padding=\"5dp\"\r\n                android:src=\"@drawable/ic_next\"\r\n                android:visibility=\"invisible\" />\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/rl_top\">\r\n\r\n            <androidx.recyclerview.widget.RecyclerView\r\n                android:id=\"@+id/recyclerView\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentTop=\"true\"\r\n                android:orientation=\"vertical\"\r\n                android:paddingVertical=\"10dp\"\r\n                app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n                tools:listitem=\"@layout/item_rcv_language\" />\r\n\r\n        </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_language_start.xml b/app/src/main/res/layout/activity_language_start.xml
--- a/app/src/main/res/layout/activity_language_start.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_language_start.xml	(date 1733199957343)
@@ -3,73 +3,66 @@
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:background="@color/color_app"
-    android:layout_height="match_parent">
-
-    <RelativeLayout
-        android:id="@+id/rl_language"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:background="@color/color_app"
-        android:orientation="vertical"
-        android:paddingTop="25dp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.5"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.5">
+    android:layout_height="match_parent"
+    android:background="@color/color_app">
+
 
-        <LinearLayout
-            android:id="@+id/rl_top"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal"
-            android:paddingHorizontal="8dp"
-            android:paddingVertical="10dp"
-            tools:ignore="UseCompoundDrawables">
+    <LinearLayout
+        android:id="@+id/rl_top"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:paddingHorizontal="8dp"
+        android:paddingVertical="10dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
 
-            <TextView
-                android:id="@+id/tv_language"
-                android:layout_width="0dp"
-                android:layout_height="40dp"
-                android:layout_gravity="center"
-                android:layout_marginStart="30dp"
-                android:layout_weight="1"
-                android:fontFamily="@font/lato_bold"
-                android:gravity="center|center_vertical"
-                android:textAllCaps="false"
-                android:text="@string/language"
-                android:textColor="@color/color_FF6F89"
-                android:textSize="23sp" />
+        <TextView
+            android:id="@+id/tv_language"
+            android:layout_width="0dp"
+            android:layout_height="40dp"
+            android:layout_gravity="center"
+            android:layout_marginStart="30dp"
+            android:layout_weight="1"
+            android:fontFamily="@font/lato_bold"
+            android:gravity="center|center_vertical"
+            android:text="@string/language"
+            android:textAllCaps="false"
+            android:textColor="@color/color_FF6F89"
+            android:textSize="23sp" />
 
-            <ImageView
-                android:id="@+id/iv_done"
-                android:layout_width="35dp"
-                android:layout_height="35dp"
-                android:layout_gravity="end|center_vertical"
-                android:layout_marginEnd="5dp"
-                android:padding="5dp"
-                android:src="@drawable/ic_next"
-                android:visibility="invisible" />
-        </LinearLayout>
+        <ImageView
+            android:id="@+id/iv_done"
+            android:layout_width="35dp"
+            android:layout_height="35dp"
+            android:layout_gravity="end|center_vertical"
+            android:layout_marginEnd="5dp"
+            android:padding="5dp"
+            android:src="@drawable/ic_next"
+            android:visibility="invisible" />
+    </LinearLayout>
 
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/rl_top">
 
-            <androidx.recyclerview.widget.RecyclerView
-                android:id="@+id/recyclerView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_alignParentTop="true"
-                android:orientation="vertical"
-                android:paddingVertical="10dp"
-                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-                tools:listitem="@layout/item_rcv_language" />
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recyclerView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:paddingVertical="10dp"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toTopOf="@+id/fr_ads"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/rl_top"
+        tools:listitem="@layout/item_rcv_language" />
 
-        </RelativeLayout>
+    <FrameLayout
+        android:id="@+id/fr_ads"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent">
 
-    </RelativeLayout>
+    </FrameLayout>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\nalias(libs.plugins.android.application) apply false\r\n    alias(libs.plugins.jetbrains.kotlin.android) apply false\r\n    id(\"com.google.gms.google-services\") version \"4.3.15\" apply false\r\n    id(\"com.google.firebase.crashlytics\") version \"2.9.8\" apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/build.gradle	(date 1733192860867)
@@ -1,6 +1,27 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
+buildscript {
+    repositories {
+        jcenter()
+        google()
+        maven {
+            url "https://maven.google.com" // Google's Maven repository
+        }
+        maven
+                { url 'https://android-sdk.is.com/' }
+        maven {
+            url 'https://artifact.bytedance.com/repository/pangle/'
+        }
+        maven {
+            url 'https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea'
+        }
+        maven { url 'https://jitpack.io' }
+
+    }
+
+
+}
 plugins {
-alias(libs.plugins.android.application) apply false
+    alias(libs.plugins.android.application) apply false
     alias(libs.plugins.jetbrains.kotlin.android) apply false
     id("com.google.gms.google-services") version "4.3.15" apply false
     id("com.google.firebase.crashlytics") version "2.9.8" apply false
Index: app/src/main/res/layout/activity_intro.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/color_app\"\r\n    android:orientation=\"vertical\">\r\n<androidx.viewpager2.widget.ViewPager2\r\n    android:id=\"@+id/viewPager2\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"0dp\"\r\n    android:layout_weight=\"1\"/>\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginVertical=\"10dp\"\r\n        android:paddingHorizontal=\"16dp\">\r\n        <LinearLayout\r\n            android:id=\"@+id/linearDots\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"10dp\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:gravity=\"center\"\r\n            android:minWidth=\"10dp\"\r\n            android:orientation=\"horizontal\"/>\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:id=\"@+id/btnNextTutorial\"\r\n            android:paddingHorizontal=\"16dp\"\r\n            android:paddingVertical=\"4dp\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:gravity=\"center\"\r\n            android:text=\"@string/next\"\r\n            android:fontFamily=\"@font/lato_bold\"\r\n            android:layout_marginBottom=\"2dp\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/color_FF6F89\"\r\n            android:textSize=\"16sp\"/>\r\n    </RelativeLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_intro.xml b/app/src/main/res/layout/activity_intro.xml
--- a/app/src/main/res/layout/activity_intro.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_intro.xml	(date 1733208805007)
@@ -1,19 +1,31 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@color/color_app"
     android:orientation="vertical">
-<androidx.viewpager2.widget.ViewPager2
-    android:id="@+id/viewPager2"
-    android:layout_width="match_parent"
-    android:layout_height="0dp"
-    android:layout_weight="1"/>
+
+    <androidx.viewpager2.widget.ViewPager2
+        android:id="@+id/viewPager2"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        app:layout_constraintBottom_toTopOf="@+id/relativeLayout"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
     <RelativeLayout
+        android:id="@+id/relativeLayout"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginVertical="10dp"
-        android:paddingHorizontal="16dp">
+        android:paddingHorizontal="16dp"
+        app:layout_constraintBottom_toTopOf="@+id/fr_ads"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent">
+
         <LinearLayout
             android:id="@+id/linearDots"
             android:layout_width="wrap_content"
@@ -22,21 +34,33 @@
             android:layout_centerVertical="true"
             android:gravity="center"
             android:minWidth="10dp"
-            android:orientation="horizontal"/>
+            android:orientation="horizontal" />
+
         <TextView
+            android:id="@+id/btnNextTutorial"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:id="@+id/btnNextTutorial"
+            android:layout_alignParentEnd="true"
+            android:layout_marginBottom="2dp"
+            android:fontFamily="@font/lato_bold"
+            android:gravity="center"
             android:paddingHorizontal="16dp"
             android:paddingVertical="4dp"
-            android:layout_alignParentEnd="true"
-            android:gravity="center"
             android:text="@string/next"
-            android:fontFamily="@font/lato_bold"
-            android:layout_marginBottom="2dp"
             android:textAllCaps="false"
             android:textColor="@color/color_FF6F89"
-            android:textSize="16sp"/>
+            android:textSize="16sp" />
     </RelativeLayout>
 
-</LinearLayout>
\ No newline at end of file
+    <FrameLayout
+        android:id="@+id/fr_ads"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent">
+
+    </FrameLayout>
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/color_app\"\r\n    tools:context=\".ui.main.MainActivity\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/layout_header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        android:paddingVertical=\"10dp\"\r\n        android:background=\"@drawable/bg_boder_header\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_title_home\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:drawableStart=\"@drawable/ic_top_home\"\r\n            android:drawablePadding=\"15dp\"\r\n            android:fontFamily=\"@font/lato_bold\"\r\n            android:gravity=\"start|center_vertical\"\r\n            android:paddingStart=\"15dp\"\r\n            android:text=\"AR Drawing Sketch\"\r\n            android:textColor=\"@color/color_FF6F89\"\r\n            android:textSize=\"24sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:fontFamily=\"@font/lato_bold\"\r\n            android:gravity=\"center|center_vertical\"\r\n            tools:text=\"@string/ar_sketch\"\r\n            android:textColor=\"@color/color_FF6F89\"\r\n            android:textSize=\"20sp\"\r\n            android:visibility=\"gone\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <com.ardrawing.sketch.anime.drawing.widget.NonScrollableViewPager\r\n        android:id=\"@+id/viewPage\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/layout_header\" />\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:background=\"@drawable/bg_bottom_main\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_home\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:drawableTop=\"@drawable/ic_home_selected\"\r\n            android:drawablePadding=\"10dp\"\r\n            android:fontFamily=\"@font/onest_medium\"\r\n            android:gravity=\"center\"\r\n            android:paddingVertical=\"16dp\"\r\n            android:text=\"@string/sketches\"\r\n            android:textColor=\"@color/color_FF6F89\"\r\n            android:textSize=\"14sp\"\r\n            tools:ignore=\"UseCompatTextViewDrawableXml\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_favorite\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:drawableTop=\"@drawable/ic_heart\"\r\n            android:drawablePadding=\"10dp\"\r\n            android:fontFamily=\"@font/onest_medium\"\r\n            android:gravity=\"center\"\r\n            android:paddingVertical=\"16dp\"\r\n            android:text=\"@string/favorite\"\r\n            android:textColor=\"@color/color_8F9DAA\"\r\n            android:textSize=\"14sp\"\r\n            tools:ignore=\"UseCompatTextViewDrawableXml\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_setting\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:drawableTop=\"@drawable/ic_setting\"\r\n            android:drawablePadding=\"10dp\"\r\n            android:fontFamily=\"@font/onest_medium\"\r\n            android:gravity=\"center\"\r\n            android:paddingVertical=\"16dp\"\r\n            android:text=\"@string/setting\"\r\n            android:textColor=\"@color/color_8F9DAA\"\r\n            android:textSize=\"14sp\"\r\n            tools:ignore=\"UseCompatTextViewDrawableXml\" />\r\n    </LinearLayout>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1733213653941)
@@ -12,9 +12,9 @@
         android:id="@+id/layout_header"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
+        android:background="@drawable/bg_boder_header"
         android:orientation="vertical"
         android:paddingVertical="10dp"
-        android:background="@drawable/bg_boder_header"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent"
@@ -36,7 +36,7 @@
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintHorizontal_bias="0.0"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent"/>
+            app:layout_constraintTop_toTopOf="parent" />
 
         <TextView
             android:id="@+id/tv_title"
@@ -45,21 +45,21 @@
             android:layout_marginTop="16dp"
             android:fontFamily="@font/lato_bold"
             android:gravity="center|center_vertical"
-            tools:text="@string/ar_sketch"
             android:textColor="@color/color_FF6F89"
             android:textSize="20sp"
             android:visibility="gone"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintHorizontal_bias="0.0"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent" />
+            app:layout_constraintTop_toTopOf="parent"
+            tools:text="@string/ar_sketch" />
     </androidx.constraintlayout.widget.ConstraintLayout>
 
     <com.ardrawing.sketch.anime.drawing.widget.NonScrollableViewPager
         android:id="@+id/viewPage"
         android:layout_width="match_parent"
         android:layout_height="0dp"
-        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/linearLayout2"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.5"
         app:layout_constraintStart_toStartOf="parent"
@@ -69,11 +69,10 @@
         android:id="@+id/linearLayout2"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:orientation="horizontal"
         android:background="@drawable/bg_bottom_main"
-        app:layout_constraintBottom_toBottomOf="parent"
+        android:orientation="horizontal"
+        app:layout_constraintBottom_toTopOf="@+id/line"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent">
 
         <TextView
@@ -121,4 +120,25 @@
             android:textSize="14sp"
             tools:ignore="UseCompatTextViewDrawableXml" />
     </LinearLayout>
+
+    <View
+        android:id="@+id/line"
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="#808080"
+        app:layout_constraintBottom_toTopOf="@+id/include"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent" />
+
+
+        <include
+            android:id="@+id/include"
+            layout="@layout/layout_banner"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"  />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/layout_native_small_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/layout_native_small_bottom.xml b/app/src/main/res/layout/layout_native_small_bottom.xml
new file mode 100644
--- /dev/null	(date 1733209871583)
+++ b/app/src/main/res/layout/layout_native_small_bottom.xml	(date 1733209871583)
@@ -0,0 +1,102 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.gms.ads.nativead.NativeAdView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <RelativeLayout
+        android:id="@+id/ad_unit_content"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/border_ads"
+        android:orientation="vertical">
+
+        <TextView style="@style/AppTheme.AdsNewV2" />
+
+        <LinearLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="4dp"
+                android:orientation="horizontal"
+                android:paddingHorizontal="12.5dp"
+                android:paddingVertical="8dip">
+
+                <ImageView
+                    android:id="@+id/ad_app_icon"
+                    android:layout_width="40dip"
+                    android:layout_height="40dip"
+                    android:adjustViewBounds="true"
+                    android:src="#3B1648" />
+
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="5dip"
+                    android:orientation="vertical">
+
+
+                    <TextView
+                        android:id="@+id/ad_headline"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:ellipsize="end"
+                        android:fontFamily="@font/onest_medium"
+                        android:maxLines="2"
+                        android:text="hellop .this ius dsa dsadsa "
+                        android:textColor="#FF6F89"
+                        android:textSize="14sp" />
+
+                    <LinearLayout
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal">
+
+                        <TextView
+                            android:id="@+id/ad_advertiser"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:fontFamily="@font/onest_regular"
+                            android:gravity="bottom"
+                            android:lines="1"
+                            android:text=" dá dsa dsa ds a dsads ad sad sa"
+                            android:textColor="#1A1C21"
+                            android:textSize="12sp" />
+                    </LinearLayout>
+
+                    <TextView
+                        android:id="@+id/ad_body"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:fontFamily="@font/onest_regular"
+                        android:maxLines="3"
+                        android:text="@string/appbar_scrolling_view_behavior"
+                        android:textColor="#1A1C21"
+                        android:textSize="12sp" />
+                </LinearLayout>
+
+            </LinearLayout>
+
+
+            <androidx.appcompat.widget.AppCompatButton
+                android:id="@+id/ad_call_to_action"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="12dp"
+                android:layout_marginVertical="10dp"
+                android:background="@drawable/bg_item_language_active"
+                android:fontFamily="@font/onest_bold"
+                android:gravity="center"
+                android:textColor="#fcfcfd"
+                android:textSize="18sp"
+                android:textStyle="bold"
+                tools:text="Cài đặt" />
+        </LinearLayout>
+
+    </RelativeLayout>
+</com.google.android.gms.ads.nativead.NativeAdView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/color_app\">\r\n\r\n     <androidx.constraintlayout.widget.ConstraintLayout\r\n         android:layout_width=\"match_parent\"\r\n         android:layout_height=\"match_parent\">\r\n\r\n          <LinearLayout\r\n              android:id=\"@+id/linearLayout4\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"wrap_content\"\r\n              android:background=\"@drawable/bg_boder_header\"\r\n\r\n              android:gravity=\"center\"\r\n              android:orientation=\"horizontal\"\r\n              android:paddingTop=\"20dp\"\r\n              app:layout_constraintEnd_toEndOf=\"parent\"\r\n              app:layout_constraintHorizontal_bias=\"0.0\"\r\n              app:layout_constraintStart_toStartOf=\"parent\"\r\n              app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n               <ImageView\r\n                   android:id=\"@+id/btn_back\"\r\n                   android:layout_width=\"wrap_content\"\r\n                   android:layout_height=\"wrap_content\"\r\n                   android:padding=\"10dp\"\r\n                   android:src=\"@drawable/icon_back\" />\r\n\r\n               <TextView\r\n                   android:id=\"@+id/txt_title\"\r\n                   android:layout_width=\"0dp\"\r\n                   android:layout_height=\"wrap_content\"\r\n                   android:layout_gravity=\"center\"\r\n                   android:layout_marginEnd=\"35dp\"\r\n                   android:layout_weight=\"1\"\r\n                   android:fontFamily=\"@font/lato_bold\"\r\n                   android:gravity=\"center\"\r\n                   android:padding=\"10dp\"\r\n                   android:textColor=\"@color/color_FF6F89\"\r\n                   android:textSize=\"20sp\"\r\n                   tools:text=\"Cartoon\" />\r\n          </LinearLayout>\r\n\r\n          <View\r\n              android:id=\"@+id/view\"\r\n              android:layout_width=\"match_parent\"\r\n              android:layout_height=\"20dp\"\r\n              app:layout_constraintEnd_toEndOf=\"parent\"\r\n              app:layout_constraintHorizontal_bias=\"0.5\"\r\n              app:layout_constraintStart_toStartOf=\"parent\"\r\n              app:layout_constraintTop_toBottomOf=\"@+id/linearLayout4\" />\r\n\r\n          <androidx.recyclerview.widget.RecyclerView\r\n              android:id=\"@+id/rcv_view\"\r\n              android:layout_width=\"wrap_content\"\r\n              android:layout_height=\"0dp\"\r\n              android:paddingHorizontal=\"20dp\"\r\n              app:layout_constraintBottom_toBottomOf=\"parent\"\r\n              app:layout_constraintEnd_toEndOf=\"parent\"\r\n              app:layout_constraintHorizontal_bias=\"0.5\"\r\n              app:layout_constraintStart_toStartOf=\"parent\"\r\n              app:layout_constraintTop_toBottomOf=\"@+id/view\"\r\n              tools:ignore=\"MissingConstraints\"\r\n              tools:listitem=\"@layout/item_rcv_detail\" />\r\n     </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_detail.xml b/app/src/main/res/layout/activity_detail.xml
--- a/app/src/main/res/layout/activity_detail.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_detail.xml	(date 1733213373481)
@@ -6,68 +6,79 @@
     android:layout_height="match_parent"
     android:background="@color/color_app">
 
-     <androidx.constraintlayout.widget.ConstraintLayout
-         android:layout_width="match_parent"
-         android:layout_height="match_parent">
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
 
-          <LinearLayout
-              android:id="@+id/linearLayout4"
-              android:layout_width="match_parent"
-              android:layout_height="wrap_content"
-              android:background="@drawable/bg_boder_header"
+        <LinearLayout
+            android:id="@+id/linearLayout4"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/bg_boder_header"
 
-              android:gravity="center"
-              android:orientation="horizontal"
-              android:paddingTop="20dp"
-              app:layout_constraintEnd_toEndOf="parent"
-              app:layout_constraintHorizontal_bias="0.0"
-              app:layout_constraintStart_toStartOf="parent"
-              app:layout_constraintTop_toTopOf="parent">
+            android:gravity="center"
+            android:orientation="horizontal"
+            android:paddingTop="20dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
 
-               <ImageView
-                   android:id="@+id/btn_back"
-                   android:layout_width="wrap_content"
-                   android:layout_height="wrap_content"
-                   android:padding="10dp"
-                   android:src="@drawable/icon_back" />
+            <ImageView
+                android:id="@+id/btn_back"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:padding="10dp"
+                android:src="@drawable/icon_back" />
 
-               <TextView
-                   android:id="@+id/txt_title"
-                   android:layout_width="0dp"
-                   android:layout_height="wrap_content"
-                   android:layout_gravity="center"
-                   android:layout_marginEnd="35dp"
-                   android:layout_weight="1"
-                   android:fontFamily="@font/lato_bold"
-                   android:gravity="center"
-                   android:padding="10dp"
-                   android:textColor="@color/color_FF6F89"
-                   android:textSize="20sp"
-                   tools:text="Cartoon" />
-          </LinearLayout>
+            <TextView
+                android:id="@+id/txt_title"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginEnd="35dp"
+                android:layout_weight="1"
+                android:fontFamily="@font/lato_bold"
+                android:gravity="center"
+                android:padding="10dp"
+                android:textColor="@color/color_FF6F89"
+                android:textSize="20sp"
+                tools:text="Cartoon" />
+        </LinearLayout>
 
-          <View
-              android:id="@+id/view"
-              android:layout_width="match_parent"
-              android:layout_height="20dp"
-              app:layout_constraintEnd_toEndOf="parent"
-              app:layout_constraintHorizontal_bias="0.5"
-              app:layout_constraintStart_toStartOf="parent"
-              app:layout_constraintTop_toBottomOf="@+id/linearLayout4" />
+        <View
+            android:id="@+id/view"
+            android:layout_width="match_parent"
+            android:layout_height="20dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.5"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/linearLayout4" />
 
-          <androidx.recyclerview.widget.RecyclerView
-              android:id="@+id/rcv_view"
-              android:layout_width="wrap_content"
-              android:layout_height="0dp"
-              android:paddingHorizontal="20dp"
-              app:layout_constraintBottom_toBottomOf="parent"
-              app:layout_constraintEnd_toEndOf="parent"
-              app:layout_constraintHorizontal_bias="0.5"
-              app:layout_constraintStart_toStartOf="parent"
-              app:layout_constraintTop_toBottomOf="@+id/view"
-              tools:ignore="MissingConstraints"
-              tools:listitem="@layout/item_rcv_detail" />
-     </androidx.constraintlayout.widget.ConstraintLayout>
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rcv_view"
+            android:layout_width="wrap_content"
+            android:layout_height="0dp"
+            android:paddingHorizontal="20dp"
+            android:layout_marginBottom="10dp"
+            app:layout_constraintBottom_toTopOf="@+id/fr_ads"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.5"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/view"
+            tools:listitem="@layout/item_rcv_detail" />
+
+        <FrameLayout
+            android:id="@+id/fr_ads"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:visibility="visible"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent">
+
+        </FrameLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
 
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.base\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.viewbinding.ViewBinding\r\n\r\nabstract class BaseFragment<T : ViewBinding> : Fragment() {\r\n\r\n    private var _binding: T? = null\r\n    protected val binding: T\r\n        get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        _binding = inflateBinding(inflater, container)\r\n        return binding.root\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n\r\n\r\n    abstract fun inflateBinding(inflater: LayoutInflater, container: ViewGroup?): T\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseFragment.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseFragment.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseFragment.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/base/BaseFragment.kt	(date 1733209368336)
@@ -3,8 +3,10 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.FrameLayout
 import androidx.fragment.app.Fragment
 import androidx.viewbinding.ViewBinding
+import com.ardrawing.sketch.anime.drawing.R
 
 abstract class BaseFragment<T : ViewBinding> : Fragment() {
 
@@ -29,4 +31,32 @@
 
 
     abstract fun inflateBinding(inflater: LayoutInflater, container: ViewGroup?): T
+    private var backgroundView: FrameLayout? = null
+    private var loadingLayout: View? = null
+    protected open fun showLoading() {
+        if (loadingLayout == null) {
+            val li = LayoutInflater.from(requireActivity())
+            loadingLayout = li.inflate(R.layout.layout_loading_progress, null, false)
+            backgroundView = loadingLayout!!.findViewById(R.id.root)
+            val rootView = requireActivity().findViewById<ViewGroup>(android.R.id.content)
+            rootView.addView(
+                loadingLayout,
+                ViewGroup.LayoutParams(
+                    ViewGroup.LayoutParams.MATCH_PARENT,
+                    ViewGroup.LayoutParams.MATCH_PARENT
+                )
+            )
+            backgroundView!!.isClickable = true
+        }
+    }
+
+    protected open fun hideLoading() {
+        if (loadingLayout != null) {
+            val rootView = requireActivity().findViewById<ViewGroup>(android.R.id.content)
+            rootView.removeView(loadingLayout)
+            if (backgroundView != null) backgroundView!!.isClickable = false
+            loadingLayout = null
+        }
+    }
+
 }
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/permisson/PermissonActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.permisson\r\n\r\nimport android.content.pm.PackageManager\r\nimport androidx.core.content.ContextCompat\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityPermissonBinding\r\nimport com.ardrawing.sketch.anime.drawing.ui.main.MainActivity\r\n\r\nclass PermissonActivity : BaseActivity<ActivityPermissonBinding>() {\r\n    private var nextActivityClass: Class<*>? = null\r\n    private val CAMERA_AND_MICROPHONE_PERMISSIONS = arrayOf(\r\n        android.Manifest.permission.CAMERA,\r\n        android.Manifest.permission.RECORD_AUDIO\r\n    )\r\n\r\n    private var allPermissionsGranted = false\r\n\r\n    override fun setViewBinding(): ActivityPermissonBinding {\r\n        return ActivityPermissonBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.btncontinue.setOnClickListener {\r\n            if (allPermissionsGranted) {\r\n                if (checkPermissions()){\r\n                    nextActivityClass = MainActivity::class.java\r\n                    showActivity(nextActivityClass!!)\r\n                    finish()\r\n                }else{\r\n                    showDialogPermission(CAMERA_AND_MICROPHONE_PERMISSIONS)\r\n                }\r\n            } else {\r\n                showDialogPermission(CAMERA_AND_MICROPHONE_PERMISSIONS)\r\n            }\r\n        }\r\n    }\r\n    private fun checkPermissions(): Boolean {\r\n        return CAMERA_AND_MICROPHONE_PERMISSIONS.all {\r\n            ContextCompat.checkSelfPermission(this, it) == PackageManager.PERMISSION_GRANTED\r\n        }\r\n    }\r\n    override fun onPermissionGranted() {\r\n        allPermissionsGranted = true\r\n\r\n    }\r\n\r\n    override fun onPermissionDenied() {\r\n        super.onPermissionDenied()\r\n\r\n    }\r\n\r\n\r\n    override fun dataObservable() {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/permisson/PermissonActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/permisson/PermissonActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/permisson/PermissonActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/permisson/PermissonActivity.kt	(date 1733210509578)
@@ -1,9 +1,16 @@
 package com.ardrawing.sketch.anime.drawing.ui.permisson
 
 import android.content.pm.PackageManager
+import android.view.View
 import androidx.core.content.ContextCompat
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.AppOpenManager
+import com.amazic.ads.util.manager.native_ad.NativeBuilder
+import com.amazic.ads.util.manager.native_ad.NativeManager
+import com.ardrawing.sketch.anime.drawing.R
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityPermissonBinding
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.ui.main.MainActivity
 
 class PermissonActivity : BaseActivity<ActivityPermissonBinding>() {
@@ -20,7 +27,7 @@
     }
 
     override fun initView() {
-
+        loadNative()
     }
 
     override fun viewListener() {
@@ -53,8 +60,37 @@
 
     }
 
+    override fun onResume() {
+        AppOpenManager.getInstance().enableAppResumeWithActivity(this.javaClass)
+        super.onResume()
+
+    }
 
     override fun dataObservable() {
 
+    }
+    private fun loadNative() {
+        try {
+            if (SharePrefRemote.get_config(this, SharePrefRemote.native_permission) &&
+                AdsConsentManager.getConsentResult(this)
+            ) {
+                binding.frAds.visibility = View.VISIBLE
+                val nativeBuilder = NativeBuilder(
+                    this,
+                    binding.frAds,
+                    R.layout.ads_native_small_bottom_shimer,
+                    R.layout.layout_native_small_bottom
+                )
+                nativeBuilder.setListIdAd(listOf(getString(R.string.native_permission)))
+                val nativeManager = NativeManager(this, this, nativeBuilder)
+            } else {
+                binding.frAds.visibility = View.GONE
+                binding.frAds.removeAllViews()
+            }
+        } catch (exception: Exception) {
+            exception.printStackTrace()
+            binding.frAds.visibility = View.GONE
+            binding.frAds.removeAllViews()
+        }
     }
 }
Index: app/src/main/res/layout/activity_permisson.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/color_app\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"40dp\"\r\n        android:layout_marginTop=\"28dp\"\r\n        android:fontFamily=\"@font/lato_bold\"\r\n        android:gravity=\"center|center_vertical\"\r\n        android:text=\"@string/permission\"\r\n        android:textColor=\"@color/color_37414B\"\r\n        android:textSize=\"24sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"44dp\"\r\n        android:src=\"@drawable/img_camera\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.497\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView2\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"52dp\"\r\n        android:fontFamily=\"@font/onest_semibold\"\r\n        android:gravity=\"center\"\r\n        android:text=\"@string/need_access_to_camera_microphone\"\r\n        android:textColor=\"@color/color_37414B\"\r\n        android:textSize=\"20sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView3\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:textSize=\"14sp\"\r\n        android:gravity=\"center\"\r\n        android:paddingHorizontal=\"16dp\"\r\n        android:text=\"@string/please_turn_on_access_your_camera_and_microphone\"\r\n        android:textColor=\"@color/color_37414B\"\r\n        android:fontFamily=\"@font/onest_regular\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/btncontinue\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"40dp\"\r\n        android:layout_marginTop=\"48dp\"\r\n        android:gravity=\"center|center_vertical\"\r\n        android:fontFamily=\"@font/lato_bold\"\r\n        android:text=\"@string/continuee\"\r\n        android:textColor=\"@color/color_FF6F89\"\r\n        android:textSize=\"24sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView3\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_permisson.xml b/app/src/main/res/layout/activity_permisson.xml
--- a/app/src/main/res/layout/activity_permisson.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/activity_permisson.xml	(date 1733201318633)
@@ -51,12 +51,12 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginTop="8dp"
-        android:textSize="14sp"
+        android:fontFamily="@font/onest_regular"
         android:gravity="center"
         android:paddingHorizontal="16dp"
         android:text="@string/please_turn_on_access_your_camera_and_microphone"
         android:textColor="@color/color_37414B"
-        android:fontFamily="@font/onest_regular"
+        android:textSize="14sp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/textView" />
@@ -66,12 +66,25 @@
         android:layout_width="match_parent"
         android:layout_height="40dp"
         android:layout_marginTop="48dp"
-        android:gravity="center|center_vertical"
         android:fontFamily="@font/lato_bold"
+        android:gravity="center|center_vertical"
         android:text="@string/continuee"
         android:textColor="@color/color_FF6F89"
         android:textSize="24sp"
         app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/textView3" />
+
+    <FrameLayout
+        android:id="@+id/fr_ads"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent">
+
+    </FrameLayout>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/language_start/LanguageStartActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ardrawing.sketch.anime.drawing.ui.language_start\r\n\r\nimport android.content.Intent\r\nimport com.ardrawing.sketch.anime.drawing.base.BaseActivity\r\nimport com.ardrawing.sketch.anime.drawing.databinding.ActivityLanguageStartBinding\r\nimport com.ardrawing.sketch.anime.drawing.model.LanguageModel\r\nimport com.ardrawing.sketch.anime.drawing.ui.intro.IntroActivity\r\nimport com.ardrawing.sketch.anime.drawing.utils.SystemUtil\r\nimport java.util.Locale\r\nimport com.ardrawing.sketch.anime.drawing.widget.visible\r\nimport com.ardrawing.sketch.anime.drawing.widget.tap\r\nclass LanguageStartActivity : BaseActivity<ActivityLanguageStartBinding>() {\r\n\r\n    private lateinit var adapter: LanguageStartAdapter\r\n    private var listLanguage: ArrayList<LanguageModel> = ArrayList()\r\n    private var codeLang = \"\"\r\n\r\n    override fun setViewBinding(): ActivityLanguageStartBinding {\r\n        return ActivityLanguageStartBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        super.onBackPressed()\r\n        finishAffinity()\r\n    }\r\n\r\n    override fun initView() {\r\n        adapter = LanguageStartAdapter(this, onClick = {\r\n            codeLang = it.code\r\n            adapter.setCheck(it.code)\r\n            binding.ivDone.visible()\r\n        })\r\n        binding.recyclerView.adapter = adapter\r\n\r\n    }\r\n\r\n    override fun viewListener() {\r\n        binding.ivDone.tap {\r\n            SystemUtil.saveLocale(baseContext, codeLang)\r\n            startActivity(Intent(this@LanguageStartActivity, IntroActivity::class.java))\r\n            finish()\r\n        }\r\n    }\r\n\r\n    override fun dataObservable() {\r\n        setCodeLanguage()\r\n        initData()\r\n    }\r\n\r\n    private fun setCodeLanguage() {\r\n        //language\r\n        val codeLangDefault = Locale.getDefault().language\r\n        val langDefault = arrayOf(\"fr\", \"pt\", \"es\", \"de\", \"in\", \"en\", \"hi\", \"vi\", \"ja\") //\"hi\" ấn độ\r\n        codeLang =\r\n            if (SystemUtil.getPreLanguage(this).equals(\"\"))\r\n                if (!mutableListOf(*langDefault)\r\n                        .contains(codeLangDefault)\r\n                ) {\r\n                    \"en\"\r\n                } else {\r\n                    codeLangDefault\r\n                } else {\r\n                SystemUtil.getPreLanguage(this)\r\n            }\r\n    }\r\n\r\n    private fun initData() {\r\n        var pos = 0\r\n        listLanguage.clear()\r\n        listLanguage.addAll(SystemUtil.listLanguage())\r\n//        listLanguage.forEachIndexed { index, languageModel ->\r\n//            if (languageModel.code == codeLang) {\r\n//                pos = index\r\n//                return@forEachIndexed\r\n//            }\r\n//        }\r\n//        val temp = listLanguage[pos]\r\n//        temp.active = true\r\n//        listLanguage.removeAt(pos)\r\n//        listLanguage.add(0, temp)\r\n        adapter.addList(listLanguage)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/language_start/LanguageStartActivity.kt b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/language_start/LanguageStartActivity.kt
--- a/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/language_start/LanguageStartActivity.kt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/java/com/ardrawing/sketch/anime/drawing/ui/language_start/LanguageStartActivity.kt	(date 1733198665139)
@@ -1,9 +1,15 @@
 package com.ardrawing.sketch.anime.drawing.ui.language_start
 
 import android.content.Intent
+import android.view.View
+import com.amazic.ads.util.AdsConsentManager
+import com.amazic.ads.util.manager.native_ad.NativeBuilder
+import com.amazic.ads.util.manager.native_ad.NativeManager
+import com.ardrawing.sketch.anime.drawing.R
 import com.ardrawing.sketch.anime.drawing.base.BaseActivity
 import com.ardrawing.sketch.anime.drawing.databinding.ActivityLanguageStartBinding
 import com.ardrawing.sketch.anime.drawing.model.LanguageModel
+import com.ardrawing.sketch.anime.drawing.sharePreferent.SharePrefRemote
 import com.ardrawing.sketch.anime.drawing.ui.intro.IntroActivity
 import com.ardrawing.sketch.anime.drawing.utils.SystemUtil
 import java.util.Locale
@@ -25,6 +31,7 @@
     }
 
     override fun initView() {
+        loadNative()
         adapter = LanguageStartAdapter(this, onClick = {
             codeLang = it.code
             adapter.setCheck(it.code)
@@ -80,4 +87,28 @@
 //        listLanguage.add(0, temp)
         adapter.addList(listLanguage)
     }
+    private fun loadNative() {
+        try {
+            if (SharePrefRemote.get_config(this, SharePrefRemote.native_language) &&
+                AdsConsentManager.getConsentResult(this)
+            ) {
+                binding.frAds.visibility = View.VISIBLE
+                val nativeBuilder = NativeBuilder(
+                    this,
+                    binding.frAds,
+                    R.layout.ads_native_large_bottom_shimer,
+                    R.layout.layout_native_large_bottom
+                )
+                nativeBuilder.setListIdAd(listOf(getString(R.string.native_language)))
+                val nativeManager = NativeManager(this, this, nativeBuilder)
+            } else {
+                binding.frAds.visibility = View.GONE
+                binding.frAds.removeAllViews()
+            }
+        } catch (exception: Exception) {
+            exception.printStackTrace()
+            binding.frAds.visibility = View.GONE
+            binding.frAds.removeAllViews()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/fragment_container\"\r\n    android:background=\"@color/color_app\"\r\n    android:paddingBottom=\"80dp\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:id=\"@+id/layou_upload\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:layout_marginHorizontal=\"16dp\"\r\n            android:layout_marginTop=\"28dp\"\r\n            android:background=\"@drawable/bg_item_upload_your\"\r\n            android:gravity=\"center\"\r\n            android:paddingHorizontal=\"15dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.493\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/textView5\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:layout_marginTop=\"36dp\"\r\n                android:fontFamily=\"@font/lato_bold\"\r\n                android:text=\"@string/upload_your_inllustration\"\r\n                android:textColor=\"#2E3338\"\r\n                android:textSize=\"20sp\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_upload\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/bg_btn_upload\"\r\n                android:drawablePadding=\"10dp\"\r\n                android:fontFamily=\"@font/onest_medium\"\r\n                android:gravity=\"center\"\r\n                android:paddingHorizontal=\"15dp\"\r\n                android:paddingVertical=\"5dp\"\r\n                android:text=\"@string/upload\"\r\n                android:textColor=\"#FF6F89\"\r\n                android:textSize=\"14sp\"\r\n                app:drawableEndCompat=\"@drawable/ic_upload\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toStartOf=\"@+id/imageView2\"\r\n                app:layout_constraintHorizontal_bias=\"0.123\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/textView5\"\r\n                app:layout_constraintVertical_bias=\"0.578\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView2\"\r\n                android:layout_width=\"116dp\"\r\n                android:layout_height=\"116dp\"\r\n                android:layout_weight=\"1\"\r\n                android:src=\"@drawable/img_hand\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintHorizontal_bias=\"1.0\"\r\n                app:layout_constraintStart_toEndOf=\"@+id/textView5\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintVertical_bias=\"0.47\" />\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rcv_view\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginTop=\"15dp\"\r\n            android:paddingHorizontal=\"16dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/layou_upload\"\r\n            tools:listitem=\"@layout/item_rcv_home\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
--- a/app/src/main/res/layout/fragment_home.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1733210666661)
@@ -5,8 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:id="@+id/fragment_container"
-    android:background="@color/color_app"
-    android:paddingBottom="80dp">
+    android:background="@color/color_app">
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
Index: app/src/main/res/layout/ads_native_large_bottom_shimer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/ads_native_large_bottom_shimer.xml b/app/src/main/res/layout/ads_native_large_bottom_shimer.xml
new file mode 100644
--- /dev/null	(date 1733198665241)
+++ b/app/src/main/res/layout/ads_native_large_bottom_shimer.xml	(date 1733198665241)
@@ -0,0 +1,116 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.facebook.shimmer.ShimmerFrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="fill_parent"
+    android:background="@drawable/border_ads"
+    android:id="@+id/shimmer_container_native"
+    android:layout_height="wrap_content"
+    tools:ignore="MissingClass">
+    <RelativeLayout
+
+        android:id="@+id/ad_unit_content"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <com.google.android.gms.ads.nativead.MediaView
+                android:id="@+id/ad_media"
+                android:layout_width="fill_parent"
+                android:layout_height="120dp"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="12dp"
+                android:layout_weight="1"
+                android:background="@color/lightTransparent"
+                android:minWidth="120dp"
+                android:minHeight="120dp" />
+
+            <LinearLayout
+                android:layout_marginTop="12dp"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:padding="8dip">
+
+                <ImageView
+                    android:id="@+id/ad_app_icon"
+                    android:layout_width="40dip"
+                    android:layout_height="40dip"
+                    android:adjustViewBounds="true"
+                    android:src="@color/lightTransparent" />
+
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="5dip"
+                    android:orientation="vertical">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal">
+
+                        <TextView style="@style/AppTheme.AdsApp" />
+
+                        <TextView
+                            android:id="@+id/ad_headline"
+                            android:layout_width="fill_parent"
+                            android:layout_height="wrap_content"
+                            android:background="@color/lightTransparent"
+                            android:ellipsize="end"
+                            android:maxLines="2"
+                            android:textColor="@android:color/white"
+                            android:textSize="14sp" />
+                    </LinearLayout>
+
+
+                    <LinearLayout
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal">
+
+                        <TextView
+                            android:id="@+id/ad_advertiser"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:gravity="bottom"
+                            android:lines="1"
+                            android:background="@color/lightTransparent"
+                            android:textColor="@android:color/white"
+                            android:textSize="12sp"
+                            android:textStyle="bold" />
+                    </LinearLayout>
+                </LinearLayout>
+            </LinearLayout>
+
+            <TextView
+                android:id="@+id/ad_body"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dip"
+                android:layout_marginRight="10dip"
+                android:maxLines="3"
+                android:background="@color/lightTransparent"
+                android:textSize="12sp" />
+
+            <androidx.appcompat.widget.AppCompatButton
+                android:id="@+id/ad_call_to_action"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_margin="12.5dp"
+                android:background="@drawable/bg_item_language_active"
+                android:gravity="center"
+                android:textColor="@color/colorWhite"
+                android:textSize="22sp"
+                android:textStyle="bold" />
+
+        </LinearLayout>
+
+
+    </RelativeLayout>
+</com.facebook.shimmer.ShimmerFrameLayout>
\ No newline at end of file
Index: app/src/main/res/values/ads_config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/ads_config.xml b/app/src/main/res/values/ads_config.xml
new file mode 100644
--- /dev/null	(date 1733211423873)
+++ b/app/src/main/res/values/ads_config.xml	(date 1733211423873)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="open_splash" translatable="false">ca-app-pub-3940256099942544/9257395921</string>
+
+    <string name="app_id" translatable="false">ca-app-pub-3940256099942544~3347511713</string>
+    <string name="inter_splash" translatable="false">ca-app-pub-3940256099942544/1033173712</string>
+    <string name="appopen_resume" translatable="false">ca-app-pub-3940256099942544/9257395921</string>
+    <string name="native_language" translatable="false">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="native_intro" translatable="false">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="inter_intro" translatable="false">ca-app-pub-3940256099942544/1033173712</string>
+    <string name="native_permission" translatable="false">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="banner_home" translatable="false">ca-app-pub-3940256099942544/2014213617</string>
+    <string name="inter_home" translatable="false">ca-app-pub-3940256099942544/1033173712</string>
+    <string name="native_tutorial" translatable="false">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="native_category" translatable="false">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="inter_category" translatable="false">ca-app-pub-3940256099942544/1033173712</string>
+    <string name="banner_draw" translatable="false">ca-app-pub-3940256099942544/2014213617</string>
+    <string name="inter_draw" translatable="false">ca-app-pub-3940256099942544/1033173712</string>
+
+<!--    <string name="app_id" translatable="false">ca-app-pub-3940256099942544~3347511713</string>-->
+<!--    <string name="inter_splash" translatable="false">ca-app-pub-3940256099942544/1033173712</string>-->
+<!--    <string name="appopen_resume" translatable="false">ca-app-pub-3940256099942544/9257395921</string>-->
+<!--    <string name="native_language" translatable="false">ca-app-pub-3940256099942544/2247696110</string>-->
+<!--    <string name="native_intro" translatable="false">ca-app-pub-3940256099942544/2247696110</string>-->
+<!--    <string name="inter_intro" translatable="false">ca-app-pub-3940256099942544/1033173712</string>-->
+<!--    <string name="native_permission" translatable="false">ca-app-pub-3940256099942544/2247696110</string>-->
+<!--    <string name="banner_home" translatable="false">ca-app-pub-3940256099942544/2014213617</string>-->
+<!--    <string name="inter_home" translatable="false">ca-app-pub-3940256099942544/1033173712</string>-->
+<!--    <string name="native_tutorial" translatable="false">ca-app-pub-3940256099942544/2247696110</string>-->
+<!--    <string name="native_category" translatable="false">ca-app-pub-3940256099942544/2247696110</string>-->
+<!--    <string name="inter_category" translatable="false">ca-app-pub-3940256099942544/1033173712</string>-->
+<!--    <string name="banner_draw" translatable="false">ca-app-pub-3940256099942544/2014213617</string>-->
+<!--    <string name="inter_draw" translatable="false">ca-app-pub-3940256099942544/1033173712</string>-->
+
+
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/values.xml b/app/src/main/res/values/values.xml
new file mode 100644
--- /dev/null	(date 1727852814094)
+++ b/app/src/main/res/values/values.xml	(date 1727852814094)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <style name="AppTheme.AdsApp" parent="@style/AdsAppTheme">
+        <item name="android:textSize">8.0sp</item>
+        <item name="android:textColor">#ffffff</item>
+        <item name="android:gravity">center</item>
+        <item name="android:layout_gravity">center</item>
+        <item name="android:background">@drawable/ads_icon_app</item>
+        <item name="android:paddingLeft">4dip</item>
+        <item name="android:paddingRight">4dip</item>
+        <item name="android:paddingBottom">3.0dip</item>
+        <item name="android:paddingTop">3.0dip</item>
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:minWidth">15.0px</item>
+        <item name="android:minHeight">15.0px</item>
+        <item name="android:text">Ad</item>
+    </style>
+
+    <style name="AppTheme.AdsNewV2" parent="@style/AdsAppTheme">
+        <item name="android:textSize">6.6sp</item>
+        <item name="android:textColor">#ffffff</item>
+        <item name="android:gravity">center</item>
+        <item name="android:layout_gravity">left</item>
+        <item name="android:background">@drawable/ads_icon_app</item>
+        <item name="android:paddingLeft">3.5dip</item>
+        <item name="android:paddingRight">3.5dip</item>
+        <item name="android:paddingBottom">2.0dip</item>
+        <item name="android:paddingTop">2.0dip</item>
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:minWidth">12.0px</item>
+        <item name="android:minHeight">12.0px</item>
+        <item name="android:text">Ad</item>
+    </style>
+
+    <style name="AppTheme.AdsNewV3" parent="@style/AdsAppTheme">
+        <item name="android:textSize">8.0sp</item>
+        <item name="android:textColor">#ffffff</item>
+        <item name="android:gravity">center</item>
+        <item name="android:layout_gravity">left</item>
+        <item name="android:background">@drawable/ads_icon_app</item>
+        <item name="android:paddingLeft">4dip</item>
+        <item name="android:paddingRight">4dip</item>
+        <item name="android:paddingBottom">2.0dip</item>
+        <item name="android:paddingTop">2.0dip</item>
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:minWidth">10.0px</item>
+        <item name="android:minHeight">10.0px</item>
+        <item name="android:text">Ad</item>
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/border_ads.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/border_ads.xml b/app/src/main/res/drawable/border_ads.xml
new file mode 100644
--- /dev/null	(date 1727852807131)
+++ b/app/src/main/res/drawable/border_ads.xml	(date 1727852807131)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape android:shape="rectangle"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+    <corners android:radius="10.0dip" />
+    <solid android:color="#fff" />
+<!--    <stroke-->
+<!--        android:width="1.0dip"-->
+<!--        android:color="@color/stockeCard" />-->
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/layout_loading_progress.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/layout_loading_progress.xml b/app/src/main/res/layout/layout_loading_progress.xml
new file mode 100644
--- /dev/null	(date 1733197159931)
+++ b/app/src/main/res/layout/layout_loading_progress.xml	(date 1733197159931)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/root"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="#FCFAF8">
+
+        <com.github.ybq.android.spinkit.SpinKitView
+            android:id="@+id/spin_kit"
+            style="@style/SpinKitView.Circle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:layout_gravity="center"
+            app:SpinKit_Color="#515151" />
+
+
+        <TextView
+            android:id="@+id/loading_dialog_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/spin_kit"
+            android:layout_centerHorizontal="true"
+            android:layout_marginTop="@dimen/_20sdp"
+            android:alpha="0.7"
+            android:fontFamily="@font/onest_regular"
+            android:text="@string/loading_ads"
+            android:textColor="#80000000"
+            android:textSize="@dimen/_13sdp" />
+    </RelativeLayout>
+
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <uses-feature android:name=\"android.hardware.camera\" />\r\n    <uses-feature\r\n        android:name=\"android.hardware.camera.autofocus\"\r\n        android:required=\"false\" />\r\n\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission\r\n        android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        android:maxSdkVersion=\"28\" />\r\n    <uses-permission\r\n        android:name=\"android.permission.READ_EXTERNAL_STORAGE\"\r\n        android:maxSdkVersion=\"32\" />\r\n    <uses-permission android:name=\"android.permission.FLASHLIGHT\" />\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.camera.flash\"\r\n        android:required=\"true\" />\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Arr_sketch_v2\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ui.splash.SplashActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.Arr_sketch_NO_fullscreen\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.intro.IntroActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/Theme.Arr_sketch_NO_fullscreen\" />\r\n        <activity\r\n            android:name=\".ui.language.LanguageActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            />\r\n        <activity\r\n            android:name=\".ui.language_start.LanguageStartActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/Theme.Arr_sketch_NO_fullscreen\" />\r\n        <activity\r\n            android:name=\".ui.main.MainActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\" />\r\n        <activity\r\n            android:name=\".ui.permisson.PermissonActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\" />\r\n        <activity\r\n            android:name=\".ui.ar.ArUploadInllustrationActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ui.detail.DetailActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\" />\r\n        <activity\r\n            android:name=\".ui.tutorial.TutorialActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\" />\r\n        <activity\r\n            android:name=\".ui.ar.ArCameraActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/app/src/main/AndroidManifest.xml	(date 1733199376032)
@@ -3,6 +3,7 @@
     xmlns:tools="http://schemas.android.com/tools">
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
     <uses-feature android:name="android.hardware.camera" />
     <uses-feature
@@ -22,15 +23,20 @@
         android:name="android.hardware.camera.flash"
         android:required="true" />
     <application
+        android:name=".App"
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
         android:fullBackupContent="@xml/backup_rules"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
+        android:requestLegacyExternalStorage="true"
         android:roundIcon="@mipmap/ic_launcher"
         android:supportsRtl="true"
         android:theme="@style/Theme.Arr_sketch_v2"
         tools:targetApi="31">
+        <meta-data
+            android:name="com.google.android.gms.ads.APPLICATION_ID"
+            android:value="@string/app_id" />
         <activity
             android:name=".ui.splash.SplashActivity"
             android:exported="true"
@@ -83,6 +89,15 @@
             android:exported="true"
             android:screenOrientation="portrait"
             android:theme="@style/AppTheme.NoActionBar" />
+        <provider
+            android:name="androidx.core.content.FileProvider"
+            android:authorities="${applicationId}.provider"
+            android:exported="false"
+            android:grantUriPermissions="true">
+            <meta-data
+                android:name="android.support.FILE_PROVIDER_PATHS"
+                android:resource="@xml/file_paths" />
+        </provider>
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/res/layout/layout_native_large_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/layout_native_large_bottom.xml b/app/src/main/res/layout/layout_native_large_bottom.xml
new file mode 100644
--- /dev/null	(date 1733209871567)
+++ b/app/src/main/res/layout/layout_native_large_bottom.xml	(date 1733209871567)
@@ -0,0 +1,120 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.gms.ads.nativead.NativeAdView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <RelativeLayout
+        android:id="@+id/ad_unit_content"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/border_ads"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <com.google.android.gms.ads.nativead.MediaView
+                android:id="@+id/ad_media"
+                android:layout_width="fill_parent"
+                android:layout_height="120dp"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="12dp"
+                android:layout_weight="1"
+                android:minWidth="120dp"
+                android:minHeight="120dp" />
+
+            <LinearLayout
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="12dp"
+                android:orientation="horizontal"
+                android:paddingHorizontal="12.5dip"
+                android:paddingVertical="8dip">
+
+                <ImageView
+                    android:id="@+id/ad_app_icon"
+                    android:layout_width="40dip"
+                    android:layout_height="40dip"
+                    android:adjustViewBounds="true"
+                    android:src="#005BBF" />
+
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="5dip"
+                    android:orientation="vertical">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal">
+
+                        <TextView style="@style/AppTheme.AdsApp" />
+
+                        <TextView
+                            android:id="@+id/ad_headline"
+                            android:layout_width="fill_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_marginStart="4dp"
+                            android:ellipsize="end"
+                            android:fontFamily="@font/onest_medium"
+                            android:maxLines="2"
+                            android:text="hellop .this ius dsa dsadsa "
+                            android:textColor="#FF6F89"
+                            android:textSize="14sp" />
+                    </LinearLayout>
+
+
+                    <LinearLayout
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal">
+
+                        <TextView
+                            android:id="@+id/ad_advertiser"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:fontFamily="@font/onest_regular"
+                            android:gravity="bottom"
+                            android:lines="1"
+                            android:text=" dá dsa dsa ds a dsads ad sad sa"
+                            android:textColor="#1A1C21"
+                            android:textSize="12sp" />
+                    </LinearLayout>
+                </LinearLayout>
+            </LinearLayout>
+
+            <TextView
+                android:id="@+id/ad_body"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="12.5dip"
+                android:layout_marginRight="12.5dip"
+                android:fontFamily="@font/onest_regular"
+                android:maxLines="3"
+                android:text="@string/appbar_scrolling_view_behavior"
+                android:textColor="#1A1C21"
+                android:textSize="12sp" />
+
+            <androidx.appcompat.widget.AppCompatButton
+                android:id="@+id/ad_call_to_action"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginVertical="10dp"
+                android:layout_marginHorizontal="16dp"
+                android:background="@drawable/bg_item_language_active"
+                android:fontFamily="@font/onest_bold"
+                android:gravity="center"
+                android:textColor="#fcfcfd"
+                android:textSize="18sp"
+                android:textStyle="bold"
+                tools:text="Cài đặt" />
+        </LinearLayout>
+
+
+    </RelativeLayout>
+</com.google.android.gms.ads.nativead.NativeAdView>
\ No newline at end of file
Index: sdk/build/intermediates/cxx/Debug/4n3j541o/logs/x86/generate_cxx_metadata_23_timing.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># C/C++ build system timings\r\ngenerate_cxx_metadata\r\n  [gap of 113ms]\r\n  create-invalidation-state 266ms\r\n  [gap of 862ms]\r\n  write-metadata-json-to-file 48ms\r\ngenerate_cxx_metadata completed in 1290ms\r\n\r\n# C/C++ build system timings\r\ngenerate_cxx_metadata\r\n  [gap of 40ms]\r\n  create-invalidation-state 196ms\r\n  [gap of 138ms]\r\n  write-metadata-json-to-file 34ms\r\ngenerate_cxx_metadata completed in 411ms\r\n\r\n# C/C++ build system timings\r\ngenerate_cxx_metadata\r\n  [gap of 31ms]\r\n  create-invalidation-state 215ms\r\n  [gap of 127ms]\r\n  write-metadata-json-to-file 21ms\r\ngenerate_cxx_metadata completed in 394ms\r\n\r\n# C/C++ build system timings\r\ngenerate_cxx_metadata\r\n  [gap of 65ms]\r\n  create-invalidation-state 166ms\r\n  [gap of 64ms]\r\n  write-metadata-json-to-file 31ms\r\ngenerate_cxx_metadata completed in 327ms\r\n\r\n# C/C++ build system timings\r\ngenerate_cxx_metadata\r\n  [gap of 167ms]\r\n  create-invalidation-state 169ms\r\n  [gap of 93ms]\r\n  write-metadata-json-to-file 34ms\r\ngenerate_cxx_metadata completed in 465ms\r\n\r\n# C/C++ build system timings\r\ngenerate_cxx_metadata\r\n  [gap of 29ms]\r\n  create-invalidation-state 97ms\r\n  [gap of 47ms]\r\n  write-metadata-json-to-file 12ms\r\ngenerate_cxx_metadata completed in 186ms\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/x86/generate_cxx_metadata_23_timing.txt b/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/x86/generate_cxx_metadata_23_timing.txt
--- a/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/x86/generate_cxx_metadata_23_timing.txt	(revision 0aa9ddf97b83516dcd096bcd928401b8846ae54f)
+++ b/sdk/build/intermediates/cxx/Debug/4n3j541o/logs/x86/generate_cxx_metadata_23_timing.txt	(date 1733277150911)
@@ -46,3 +46,28 @@
   write-metadata-json-to-file 12ms
 generate_cxx_metadata completed in 186ms
 
+# C/C++ build system timings
+generate_cxx_metadata
+  [gap of 57ms]
+  create-invalidation-state 112ms
+  [gap of 47ms]
+  write-metadata-json-to-file 23ms
+generate_cxx_metadata completed in 240ms
+
+# C/C++ build system timings
+generate_cxx_metadata
+  [gap of 154ms]
+  create-invalidation-state 516ms
+  [gap of 1716ms]
+  write-metadata-json-to-file 159ms
+  [gap of 17ms]
+generate_cxx_metadata completed in 2562ms
+
+# C/C++ build system timings
+generate_cxx_metadata
+  [gap of 60ms]
+  create-invalidation-state 147ms
+  [gap of 67ms]
+  write-metadata-json-to-file 29ms
+generate_cxx_metadata completed in 304ms
+
Index: app/src/main/res/drawable/ads_icon_app.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ads_icon_app.xml b/app/src/main/res/drawable/ads_icon_app.xml
new file mode 100644
--- /dev/null	(date 1727852811216)
+++ b/app/src/main/res/drawable/ads_icon_app.xml	(date 1727852811216)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="15dp"
+    android:height="11dp"
+    android:viewportWidth="15"
+    android:viewportHeight="11">
+  <path
+      android:pathData="M0,8.8C0,3.94 3.94,0 8.8,0H14.3V2.2C14.3,7.06 10.36,11 5.5,11H0V8.8Z"
+      android:fillColor="#005BBF"/>
+</vector>
